"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import base.pkg.kusion_kubernetes.apimachinery.apis
import base.pkg.kusion_kubernetes.api.core.v1
import regex


schema CommonPrometheusFields:
    """ CommonPrometheusFields are the options available to both the Prometheus server and agent.

    Attributes
    ----------
    podMetadata: PodMetadata, default is Undefined, optional
        pod metadata
    serviceMonitorSelector: apis.LabelSelector, default is Undefined, optional
        service monitor selector
    serviceMonitorNamespaceSelector: apis.LabelSelector, default is Undefined, optional
        service monitor namespace selector
    podMonitorSelector: apis.LabelSelector, default is Undefined, optional
        pod monitor selector
    podMonitorNamespaceSelector: apis.LabelSelector, default is Undefined, optional
        pod monitor namespace selector
    probeNamespaceSelector: apis.LabelSelector, default is Undefined, optional
        probe namespace selector
    probeSelector: apis.LabelSelector, default is Undefined, optional
        probe selector
    version: str, default is Undefined, optional
        Version of Prometheus to be deployed.
    paused: bool, default is Undefined, optional
        When a Prometheus deployment is paused, no actions except for deletion will be performed on the underlying objects.
    image: str, default is Undefined, optional
        Image if specified has precedence over baseImage, tag and sha combinations. Specifying the version is still necessary to ensure the Prometheus Operator knows what version of Prometheus is being configured.
    imagePullSecrets: [v1.LocalObjectReference], default is Undefined, optional
        An optional list of references to secrets in the same namespace to use for pulling prometheus and alertmanager images from registries see http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod
    replicas: int, default is Undefined, optional
        Number of replicas of each shard to deploy for a Prometheus deployment. Number of replicas multiplied by shards is the total number of Pods created.
    shards: int, default is Undefined, optional
        EXPERIMENTAL: Number of shards to distribute targets onto. Number of replicas multiplied by shards is the total number of Pods created. Note that scaling down shards will not reshard data onto remaining instances, it must be manually moved. Increasing shards will not reshard data either but it will continue to be available from the same instances. To query globally use Thanos sidecar and Thanos querier or remote write data to a central location. Sharding is done on the content of the `__address__` target meta-label.
    replicaExternalLabelName: str, default is Undefined, optional
        Name of Prometheus external label used to denote replica name. Defaults to the value of `prometheus_replica`. External label will _not_ be added when value is set to empty string (`""`).
    prometheusExternalLabelName: str, default is Undefined, optional
        Name of Prometheus external label used to denote Prometheus instance name. Defaults to the value of `prometheus`. External label will _not_ be added when value is set to empty string (`""`).
    logFormat: str, default is Undefined, optional
        Log format for Prometheus to be configured with.
    logLevel: str, default is Undefined, optional
        Log level for Prometheus to be configured with.
    scrapeInterval: str, default is "30s", optional
        Interval between consecutive scrapes. Default: `30s`
    scrapeTimeout: str, default is Undefined, optional
        Number of seconds to wait for target to respond before erroring.
    externalLabels: {str:str}, default is Undefined, optional
        The labels to add to any time series or alerts when communicating with external systems (federation, remote storage, Alertmanager).
    enableFeatures: [str], default is Undefined, optional
        Enable access to Prometheus disabled features. By default, no features are enabled. Enabling disabled features is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice. For more information see https://prometheus.io/docs/prometheus/latest/disabled_features/
    enableRemoteWriteReceiver: bool, default is Undefined, optional
        Enable Prometheus to be used as a receiver for the Prometheus remote write protocol. Defaults to the value of `false`. WARNING: This is not considered an efficient way of ingesting samples. Use it with caution for specific low-volume use cases. It is not suitable for replacing the ingestion via scraping and turning Prometheus into a push-based metrics collection system. For more information see https://prometheus.io/docs/prometheus/latest/querying/api/#remote-write-receiver Only valid in Prometheus versions 2.33.0 and newer.
    externalUrl: str, default is Undefined, optional
        The external URL the Prometheus instances will be available under. This is necessary to generate correct URLs. This is necessary if Prometheus is not served from root of a DNS name.
    routePrefix: str, default is Undefined, optional
        The route prefix Prometheus registers HTTP handlers for. This is useful, if using ExternalURL and a proxy is rewriting HTTP routes of a request, and the actual ExternalURL is still true, but the server serves requests under a different route prefix. For example for use with `kubectl proxy`.
    storage: StorageSpec, default is Undefined, optional
        Storage defines the configured storage for a group Prometheus servers.
    volumeMounts: [v1.VolumeMount], default is Undefined, optional
        VolumeMounts allows configuration of additional VolumeMounts on the output StatefulSet definition. VolumeMounts specified will be appended to other VolumeMounts in the prometheus container, that are generated as a result of StorageSpec objects.
    volumes: [v1.Volumes], default is Undefined, optional
        Volumes allows configuration of additional volumes on the output StatefulSet definition. Volumes specified will be appended to other volumes that are generated as a result of StorageSpec objects.
    web: PrometheusWebSpec, default is Undefined, optional
        web
    resources: v1.ResourceRequirements, default is Undefined, optional
        resources
    nodeSelector: {str:str}, default is Undefined, optional
        Define which Nodes the Pods are scheduled on.
    serviceAccountName: str, default is Undefined, optional
        ServiceAccountName is the name of the ServiceAccount to use to run the Prometheus Pods.
    secrets: [str], default is Undefined, optional
        Secrets is a list of Secrets in the same namespace as the Prometheus object, which shall be mounted into the Prometheus Pods. Each Secret is added to the StatefulSet definition as a volume named `secret-<secret-name>`. The Secrets are mounted into /etc/prometheus/secrets/<secret-name> in the 'prometheus' container.
    configMaps: [str], default is Undefined, optional
        ConfigMaps is a list of ConfigMaps in the same namespace as the Prometheus object, which shall be mounted into the Prometheus Pods. Each ConfigMap is added to the StatefulSet definition as a volume named `configmap-<configmap-name>`. The ConfigMaps are mounted into /etc/prometheus/configmaps/<configmap-name> in the 'prometheus' container.
    affinity: v1.Affinity, default is Undefined, optional
        affinity
    tolerations: [v1.Toleration], default is Undefined, optional
        If specified, the pod's tolerations.
    topologySpreadConstraints: [v1.TopologySpreadConstraint], default is Undefined, optional
        If specified, the pod's topology spread constraints.
    remoteWrite: [RemoteWriteSpec], default is Undefined, optional
        remoteWrite is the list of remote write configurations.
    securityContext: v1.PodSecurityContext, default is Undefined, optional
        security context
    listenLocal: bool, default is Undefined, optional
        ListenLocal makes the Prometheus server listen on loopback, so that it does not bind against the Pod IP.
    initContainers: [v1.Container], default is Undefined, optional
        InitContainers allows adding initContainers to the pod definition. Those can be used to e.g. fetch secrets for injection into the Prometheus configuration from external sources. Any errors during the execution of an initContainer will lead to a restart of the Pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/ InitContainers described here modify an operator generated init containers if they share the same name and modifications are done via a strategic merge patch. The current init container name is: `init-config-reloader`. Overriding init containers is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.
    containers: [v1.Container], default is Undefined, optional
        Containers allows injecting additional containers or modifying operator generated containers. This can be used to allow adding an authentication proxy to a Prometheus pod or to change the behavior of an operator generated container. Containers described here modify an operator generated container if they share the same name and modifications are done via a strategic merge patch. The current container names are: `prometheus`, `config-reloader`, and `thanos-sidecar`. Overriding containers is entirely outside the scope of what the maintainers will support and by doing so, you accept that this behaviour may break at any time without notice.
    additionalScrapeConfigs: v1.SecretKeySelector, default is Undefined, optional
        additional scrape configs
    apiserverConfig: APIServerConfig, default is Undefined, optional
        apiserver config
    portName: str, default is Undefined, optional
        Port name used for the pods and governing service. This defaults to web
    priorityClassName: str, default is Undefined, optional
        Priority class assigned to the Pods
    arbitraryFSAccessThroughSMs: ArbitraryFSAccessThroughSMsConfig, default is Undefined, optional
        arbitrary f s access through s ms
    overrideHonorLabels: bool, default is Undefined, optional
        When true, Prometheus resolves label conflicts by renaming the labels in the scraped data to "exported_<label value>" for all targets created from service and pod monitors. Otherwise the HonorLabels field of the service or pod monitor applies.
    overrideHonorTimestamps: bool, default is Undefined, optional
        When true, Prometheus ignores the timestamps for all the targets created from service and pod monitors. Otherwise the HonorTimestamps field of the service or pod monitor applies.
    ignoreNamespaceSelectors: bool, default is Undefined, optional
        IgnoreNamespaceSelectors if set to true will ignore NamespaceSelector settings from all PodMonitor, ServiceMonitor and Probe objects. They will only discover endpoints within the namespace of the PodMonitor, ServiceMonitor and Probe objects. Defaults to false.
    enforcedBodySizeLimit: str, default is Undefined, optional
        EnforcedBodySizeLimit defines the maximum size of uncompressed response body that will be accepted by Prometheus. Targets responding with a body larger than this many bytes will cause the scrape to fail. Example: 100MB. If defined, the limit will apply to all service/pod monitors and probes. This is an experimental feature, this behaviour could change or be removed in the future. Only valid in Prometheus versions 2.28.0 and newer.
    enforcedLabelLimit: int, default is Undefined, optional
        Per-scrape limit on number of labels that will be accepted for a sample. If more than this number of labels are present post metric-relabeling, the entire scrape will be treated as failed. 0 means no limit. Only valid in Prometheus versions 2.27.0 and newer.
    enforcedLabelNameLengthLimit: int, default is Undefined, optional
        Per-scrape limit on length of labels name that will be accepted for a sample. If a label name is longer than this number post metric-relabeling, the entire scrape will be treated as failed. 0 means no limit. Only valid in Prometheus versions 2.27.0 and newer.
    enforcedLabelValueLengthLimit: int, default is Undefined, optional
        Per-scrape limit on length of labels value that will be accepted for a sample. If a label value is longer than this number post metric-relabeling, the entire scrape will be treated as failed. 0 means no limit. Only valid in Prometheus versions 2.27.0 and newer.
    enforcedNamespaceLabel: str, default is Undefined, optional
        EnforcedNamespaceLabel If set, a label will be added to 
           1. all user-metrics (created by `ServiceMonitor`, `PodMonitor` and `Probe` objects) and 
           2. in all `PrometheusRule` objects (except the ones excluded in `prometheusRulesExcludedFromEnforce`) to 
               * alerting & recording rules and 
               * the metrics used in their expressions (`expr`). 
        Label name is this field's value. Label value is the namespace of the created object (mentioned above).
    enforcedSampleLimit: int, default is Undefined, optional
        EnforcedSampleLimit defines global limit on number of scraped samples that will be accepted. This overrides any SampleLimit set per ServiceMonitor or/and PodMonitor. It is meant to be used by admins to enforce the SampleLimit to keep overall number of samples/series under the desired limit. Note that if SampleLimit is lower that value will be taken instead.
    enforcedTargetLimit: int, default is Undefined, optional
        EnforcedTargetLimit defines a global limit on the number of scraped targets.  This overrides any TargetLimit set per ServiceMonitor or/and PodMonitor.  It is meant to be used by admins to enforce the TargetLimit to keep the overall number of targets under the desired limit. Note that if TargetLimit is lower, that value will be taken instead, except if either value is zero, in which case the non-zero value will be used.  If both values are zero, no limit is enforced.
    minReadySeconds: int, default is Undefined, optional
        Minimum number of seconds for which a newly created pod should be ready without any of its container crashing for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready) This is an alpha field and requires enabling StatefulSetMinReadySeconds feature gate.
    hostAliases: [HostAlias], default is Undefined, optional
        Pods' hostAliases configuration
    additionalArgs: [Argument], default is Undefined, optional
        AdditionalArgs allows setting additional arguments for the Thanos container. The arguments are passed as-is to the Thanos container which may cause issues if they are invalid or not supported the given Thanos version. In case of an argument conflict (e.g. an argument which is already set by the operator itself) or when providing an invalid argument the reconciliation will fail and an error will be logged.
    walCompression: bool, default is Undefined, optional
        Enable compression of the write-ahead log using Snappy. This flag is only available in versions of Prometheus >= 2.11.0.
    excludedFromEnforcement: [ObjectReference], default is Undefined, optional
        List of references to PodMonitor, ServiceMonitor, Probe and PrometheusRule objects to be excluded from enforcing a namespace label of origin. Applies only if enforcedNamespaceLabel set to true.
    hostNetwork: bool, default is Undefined, optional
        Use the host's network namespace if true.
    """


    podMetadata?: PodMetadata

    serviceMonitorSelector?: apis.LabelSelector

    serviceMonitorNamespaceSelector?: apis.LabelSelector

    podMonitorNamespaceSelector?: apis.LabelSelector

    podMonitorSelector?: apis.LabelSelector

    probeNamespaceSelector?: apis.LabelSelector

    probeSelector?: apis.LabelSelector

    paused?: bool

    version?: str

    replicas?: int

    shards?: int

    replicaExternalLabelName?: str

    prometheusExternalLabelName?: str

    logFormat?: "" | "logfmt" | "json"

    logLevel?: "" | "debug" | "info" | "warn" | "error"

    scrapeInterval?: str = "30s"

    scrapeTimeout?: str

    externalLabels?: {str:str}

    enableFeatures?: [str]

    enableRemoteWriteReceiver?: bool

    externalUrl?: str

    routePrefix?: str

    storage?: StorageSpec

    volumeMounts?: [v1.VolumeMount]

    volumes?: [v1.Volume]

    web?: PrometheusWebSpec

    resources?: v1.ResourceRequirements

    nodeSelector?: {str:str}

    serviceAccountName?: str

    secrets?: [str]

    configMaps?: [str]

    affinity?: v1.Affinity

    tolerations?: [v1.Toleration]

    topologySpreadConstraints?: [v1.TopologySpreadConstraint]

    remoteWrite?: [RemoteWriteSpec]

    securityContext?: v1.PodSecurityContext

    listenLocal?: bool

    initContainers?: [v1.Container]

    containers?: [v1.Container]

    additionalScrapeConfigs?: v1.SecretKeySelector

    apiserverConfig?: APIServerConfig

    portName?: str

    priorityClassName?: str

    arbitraryFSAccessThroughSMs?: ArbitraryFSAccessThroughSMsConfig

    overrideHonorLabels?: bool

    overrideHonorTimestamps?: bool

    ignoreNamespaceSelectors?: bool

    enforcedBodySizeLimit?: str

    enforcedLabelLimit?: int

    enforcedLabelNameLengthLimit?: int

    enforcedLabelValueLengthLimit?: int

    enforcedNamespaceLabel?: str

    enforcedSampleLimit?: int

    enforcedTargetLimit?: int

    minReadySeconds?: int

    hostAliases?: [HostAlias]

    additionalArgs?: [Argument]

    walCompression?: bool

    excludedFromEnforcement?: [ObjectReference]

    hostNetwork?: bool


    check:
        regex.match(scrapeInterval, r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if scrapeInterval
        regex.match(scrapeTimeout, r"^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$") if scrapeTimeout
        regex.match(enforcedBodySizeLimit, r"(^0|([0-9]*[.])?[0-9]+((K|M|G|T|E|P)i?)?B)$") if enforcedBodySizeLimit