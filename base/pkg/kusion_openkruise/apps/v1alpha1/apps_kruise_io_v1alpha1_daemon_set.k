"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import base.pkg.kusion_kubernetes.apimachinery.apis

schema DaemonSet:
    """ DaemonSet is the Schema for the daemonsets API

    Attributes
    ----------
    __settings__ : {str:str}, default is {"output_type": "STANDALONE"}, optional
         existence of this attribute indicates that the model will be treated standalone by KCLVM.
    apiVersion : str, default is "apps.kruise.io/v1alpha1", required
         APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "DaemonSet", required
         Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : apis.ObjectMeta, default is Undefined, optional
        metadata
    spec : AppsKruiseIoV1alpha1DaemonSetSpec, default is Undefined, optional
        spec
    status : AppsKruiseIoV1alpha1DaemonSetStatus, default is Undefined, optional
        status
    """

    __settings__?: {str:str} = {"output_type": "STANDALONE"}

    apiVersion: "apps.kruise.io/v1alpha1" = "apps.kruise.io/v1alpha1"

    kind: "DaemonSet" = "DaemonSet"

    metadata?: apis.ObjectMeta

    spec?: AppsKruiseIoV1alpha1DaemonSetSpec

    status?: AppsKruiseIoV1alpha1DaemonSetStatus

schema AppsKruiseIoV1alpha1DaemonSetSpec:
    """ DaemonSetSpec defines the desired state of DaemonSet

    Attributes
    ----------
    burstReplicas : int, default is Undefined, optional
         BurstReplicas is a rate limiter for booting pods on a lot of pods. The default value is 250
    minReadySeconds : int, default is Undefined, optional
         The minimum number of seconds for which a newly created DaemonSet pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready).
    revisionHistoryLimit : int, default is Undefined, optional
         The number of old history to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.
    template : any, default is Undefined, required
         An object that describes the pod that will be created. The DaemonSet will create exactly one copy of this pod on every node that matches the template's node selector (or on every node if no node selector is specified). More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template
    selector : AppsKruiseIoV1alpha1DaemonSetSpecSelector, default is Undefined, required
        selector
    updateStrategy : AppsKruiseIoV1alpha1DaemonSetSpecUpdateStrategy, default is Undefined, optional
        update strategy
    """

    burstReplicas?: int

    minReadySeconds?: int

    revisionHistoryLimit?: int

    template: any

    selector: AppsKruiseIoV1alpha1DaemonSetSpecSelector

    updateStrategy?: AppsKruiseIoV1alpha1DaemonSetSpecUpdateStrategy

schema AppsKruiseIoV1alpha1DaemonSetSpecSelector:
    """ A label query over pods that are managed by the daemon set. Must match in order to be controlled. It must match the pod template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors

    Attributes
    ----------
    matchExpressions : [AppsKruiseIoV1alpha1DaemonSetSpecSelectorMatchExpressionsItems0], default is Undefined, optional
         matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
         matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    matchExpressions?: [AppsKruiseIoV1alpha1DaemonSetSpecSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}

schema AppsKruiseIoV1alpha1DaemonSetSpecSelectorMatchExpressionsItems0:
    """ A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
         key is the label key that the selector applies to.
    operator : str, default is Undefined, required
         operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
         values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """

    key: str

    operator: str

    values?: [str]

schema AppsKruiseIoV1alpha1DaemonSetSpecUpdateStrategy:
    """ An update strategy to replace existing DaemonSet pods with new pods.

    Attributes
    ----------
    $type : str, default is Undefined, optional
         Type of daemon set update. Can be "RollingUpdate" or "OnDelete". Default is RollingUpdate.
    rollingUpdate : AppsKruiseIoV1alpha1DaemonSetSpecUpdateStrategyRollingUpdate, default is Undefined, optional
        rolling update
    """

    $type?: str

    rollingUpdate?: AppsKruiseIoV1alpha1DaemonSetSpecUpdateStrategyRollingUpdate

schema AppsKruiseIoV1alpha1DaemonSetSpecUpdateStrategyRollingUpdate:
    """ Rolling update config params. Present only if type = "RollingUpdate".

    Attributes
    ----------
    maxSurge : int, default is Undefined, optional
         Only when type=SurgingRollingUpdateType, it works. The maximum number of DaemonSet pods that can be scheduled above the desired number of pods during the update. Value can be an absolute number (ex: 5) or a percentage of the total number of DaemonSet pods at the start of the update (ex: 10%). The absolute number is calculated from the percentage by rounding up. This cannot be 0. The default value is 1. Example: when this is set to 30%, at most 30% of the total number of nodes that should be running the daemon pod (i.e. status.desiredNumberScheduled) can have 2 pods running at any given time. The update starts by starting replacements for at most 30% of those DaemonSet pods. Once the new pods are available it then stops the existing pods before proceeding onto other DaemonSet pods, thus ensuring that at most 130% of the desired final number of DaemonSet  pods are running at all times during the update.
    maxUnavailable : int, default is Undefined, optional
         The maximum number of DaemonSet pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of total number of DaemonSet pods at the start of the update (ex: 10%). Absolute number is calculated from percentage by rounding up. This cannot be 0. Default value is 1. Example: when this is set to 30%, at most 30% of the total number of nodes that should be running the daemon pod (i.e. status.desiredNumberScheduled) can have their pods stopped for an update at any given time. The update starts by stopping at most 30% of those DaemonSet pods and then brings up new DaemonSet pods in their place. Once the new pods are available, it then proceeds onto other DaemonSet pods, thus ensuring that at least 70% of original number of DaemonSet pods are available at all times during the update.
    partition : int, default is Undefined, optional
         The number of DaemonSet pods remained to be old version. Default value is 0. Maximum value is status.DesiredNumberScheduled, which means no pod will be updated.
    paused : bool, default is Undefined, optional
         Indicates that the daemon set is paused and will not be processed by the daemon set controller.
    rollingUpdateType : str, default is Undefined, optional
         Type is to specify which kind of rollingUpdate.
    selector : AppsKruiseIoV1alpha1DaemonSetSpecUpdateStrategyRollingUpdateSelector, default is Undefined, optional
        selector
    """

    maxSurge?: int

    maxUnavailable?: int

    partition?: int

    paused?: bool

    rollingUpdateType?: str

    selector?: AppsKruiseIoV1alpha1DaemonSetSpecUpdateStrategyRollingUpdateSelector

schema AppsKruiseIoV1alpha1DaemonSetSpecUpdateStrategyRollingUpdateSelector:
    """ A label query over nodes that are managed by the daemon set RollingUpdate. Must match in order to be controlled. It must match the node's labels.

    Attributes
    ----------
    matchExpressions : [AppsKruiseIoV1alpha1DaemonSetSpecUpdateStrategyRollingUpdateSelectorMatchExpressionsItems0], default is Undefined, optional
         matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
         matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    matchExpressions?: [AppsKruiseIoV1alpha1DaemonSetSpecUpdateStrategyRollingUpdateSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}

schema AppsKruiseIoV1alpha1DaemonSetSpecUpdateStrategyRollingUpdateSelectorMatchExpressionsItems0:
    """ A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
         key is the label key that the selector applies to.
    operator : str, default is Undefined, required
         operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
         values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """

    key: str

    operator: str

    values?: [str]

schema AppsKruiseIoV1alpha1DaemonSetStatus:
    """ DaemonSetStatus defines the observed state of DaemonSet

    Attributes
    ----------
    collisionCount : int, default is Undefined, optional
         Count of hash collisions for the DaemonSet. The DaemonSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
    conditions : [AppsKruiseIoV1alpha1DaemonSetStatusConditionsItems0], default is Undefined, optional
         Represents the latest available observations of a DaemonSet's current state.
    currentNumberScheduled : int, default is Undefined, required
         The number of nodes that are running at least 1 daemon pod and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
    daemonSetHash : str, default is Undefined, required
         DaemonSetHash is the controller-revision-hash, which represents the latest version of the DaemonSet.
    desiredNumberScheduled : int, default is Undefined, required
         The total number of nodes that should be running the daemon pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
    numberAvailable : int, default is Undefined, optional
         The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available (ready for at least spec.minReadySeconds)
    numberMisscheduled : int, default is Undefined, required
         The number of nodes that are running the daemon pod, but are not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
    numberReady : int, default is Undefined, required
         The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready.
    numberUnavailable : int, default is Undefined, optional
         The number of nodes that should be running the daemon pod and have none of the daemon pod running and available (ready for at least spec.minReadySeconds)
    observedGeneration : int, default is Undefined, optional
         The most recent generation observed by the daemon set controller.
    updatedNumberScheduled : int, default is Undefined, required
         The total number of nodes that are running updated daemon pod
    """

    collisionCount?: int

    conditions?: [AppsKruiseIoV1alpha1DaemonSetStatusConditionsItems0]

    currentNumberScheduled: int

    daemonSetHash: str

    desiredNumberScheduled: int

    numberAvailable?: int

    numberMisscheduled: int

    numberReady: int

    numberUnavailable?: int

    observedGeneration?: int

    updatedNumberScheduled: int

schema AppsKruiseIoV1alpha1DaemonSetStatusConditionsItems0:
    """ DaemonSetCondition describes the state of a DaemonSet at a certain point.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
         Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
         A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
         The reason for the condition's last transition.
    status : str, default is Undefined, required
         Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
         Type of DaemonSet condition.
    """

    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str
