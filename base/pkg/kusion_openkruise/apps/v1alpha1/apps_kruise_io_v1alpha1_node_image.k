"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import base.pkg.kusion_kubernetes.apimachinery.apis


schema NodeImage:
    """ NodeImage is the Schema for the nodeimages API

    Attributes
    ----------
    __settings__ : {str:str}, default is {"output_type": "STANDALONE"}, optional
         existence of this attribute indicates that the model will be treated standalone by KCLVM.
    apiVersion : str, default is "apps.kruise.io/v1alpha1", required
         APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "NodeImage", required
         Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : apis.ObjectMeta, default is Undefined, optional
        metadata
    spec : AppsKruiseIoV1alpha1NodeImageSpec, default is Undefined, optional
        spec
    status : AppsKruiseIoV1alpha1NodeImageStatus, default is Undefined, optional
        status
    """


    __settings__?: {str:str} = {"output_type": "STANDALONE"}

    apiVersion: "apps.kruise.io/v1alpha1" = "apps.kruise.io/v1alpha1"

    kind: "NodeImage" = "NodeImage"

    metadata?: apis.ObjectMeta

    spec?: AppsKruiseIoV1alpha1NodeImageSpec

    status?: AppsKruiseIoV1alpha1NodeImageStatus


schema AppsKruiseIoV1alpha1NodeImageSpec:
    """ NodeImageSpec defines the desired state of NodeImage

    Attributes
    ----------
    images : {str:AppsKruiseIoV1alpha1NodeImageSpecImagesAnon}, default is Undefined, optional
         Specifies images to be pulled on this node It can not be more than 256 for each NodeImage
    """


    images?: {str:AppsKruiseIoV1alpha1NodeImageSpecImagesAnon}


schema AppsKruiseIoV1alpha1NodeImageSpecImagesAnon:
    """ ImageSpec defines the pulling spec of an image

    Attributes
    ----------
    pullSecrets : [AppsKruiseIoV1alpha1NodeImageSpecImagesAnonPullSecretsItems0], default is Undefined, optional
         PullSecrets is an optional list of references to secrets in the same namespace to use for pulling the image. If specified, these secrets will be passed to individual puller implementations for them to use.  For example, in the case of docker, only DockerConfig type secrets are honored.
    tags : [AppsKruiseIoV1alpha1NodeImageSpecImagesAnonTagsItems0], default is Undefined, required
         Tags is a list of versions of this image
    """


    pullSecrets?: [AppsKruiseIoV1alpha1NodeImageSpecImagesAnonPullSecretsItems0]

    tags: [AppsKruiseIoV1alpha1NodeImageSpecImagesAnonTagsItems0]


schema AppsKruiseIoV1alpha1NodeImageSpecImagesAnonPullSecretsItems0:
    """ ReferenceObject comprises a resource name, with a mandatory namespace, rendered as "<namespace>/<name>".

    Attributes
    ----------
    name : str, default is Undefined, optional
        name
    namespace : str, default is Undefined, optional
        namespace
    """


    name?: str

    namespace?: str


schema AppsKruiseIoV1alpha1NodeImageSpecImagesAnonTagsItems0:
    """ ImageTagSpec defines the pulling spec of an image tag

    Attributes
    ----------
    createdAt : str, default is Undefined, optional
         Specifies the create time of this tag
    ownerReferences : [any], default is Undefined, optional
         List of objects depended by this object. If this image is managed by a controller, then an entry in this list will point to this controller.
    pullPolicy : AppsKruiseIoV1alpha1NodeImageSpecImagesAnonTagsItems0PullPolicy, default is Undefined, optional
        pull policy
    tag : str, default is Undefined, required
         Specifies the image tag
    version : int, default is Undefined, optional
         An opaque value that represents the internal version of this tag that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server.  Populated by the system. Read-only. Value must be treated as opaque by clients and .
    """


    createdAt?: str

    ownerReferences?: [any]

    pullPolicy?: AppsKruiseIoV1alpha1NodeImageSpecImagesAnonTagsItems0PullPolicy

    tag: str

    version?: int


schema AppsKruiseIoV1alpha1NodeImageSpecImagesAnonTagsItems0PullPolicy:
    """ PullPolicy is an optional field to set parameters of the pulling task. If not specified, the system will use the default values.

    Attributes
    ----------
    activeDeadlineSeconds : int, default is Undefined, optional
         ActiveDeadlineSeconds specifies the duration in seconds relative to the startTime that the task may be active before the system tries to terminate it; value must be positive integer. if not specified, the system will never terminate it.
    backoffLimit : int, default is Undefined, optional
         Specifies the number of retries before marking the pulling task failed. Defaults to 3
    timeoutSeconds : int, default is Undefined, optional
         Specifies the timeout of the pulling task. Defaults to 600
    ttlSecondsAfterFinished : int, default is Undefined, optional
         TTLSecondsAfterFinished limits the lifetime of a pulling task that has finished execution (either Complete or Failed). If this field is set, ttlSecondsAfterFinished after the task finishes, it is eligible to be automatically deleted. If this field is unset, the task won't be automatically deleted. If this field is set to zero, the task becomes eligible to be deleted immediately after it finishes.
    """


    activeDeadlineSeconds?: int

    backoffLimit?: int

    timeoutSeconds?: int

    ttlSecondsAfterFinished?: int


schema AppsKruiseIoV1alpha1NodeImageStatus:
    """ NodeImageStatus defines the observed state of NodeImage

    Attributes
    ----------
    desired : int, default is Undefined, required
         The desired number of pulling tasks, this is typically equal to the number of images in spec.
    failed : int, default is Undefined, optional
         The number of pulling tasks  which reached phase Failed.
    imageStatuses : {str:AppsKruiseIoV1alpha1NodeImageStatusImageStatusesAnon}, default is Undefined, optional
         all statuses of active image pulling tasks
    pulling : int, default is Undefined, optional
         The number of pulling tasks which are not finished.
    succeeded : int, default is Undefined, optional
         The number of pulling tasks which reached phase Succeeded.
    firstSyncStatus : AppsKruiseIoV1alpha1NodeImageStatusFirstSyncStatus, default is Undefined, optional
        first sync status
    """


    desired: int

    failed?: int

    imageStatuses?: {str:AppsKruiseIoV1alpha1NodeImageStatusImageStatusesAnon}

    pulling?: int

    succeeded?: int

    firstSyncStatus?: AppsKruiseIoV1alpha1NodeImageStatusFirstSyncStatus


schema AppsKruiseIoV1alpha1NodeImageStatusFirstSyncStatus:
    """ The first of all job has finished on this node. When a node is added to the cluster, we want to know the time when the node's image pulling is completed, and use it to trigger the operation of the upper system.

    Attributes
    ----------
    message : str, default is Undefined, optional
        message
    status : str, default is Undefined, optional
         SyncStatusPhase defines the node status
    syncAt : str, default is Undefined, optional
        sync at
    """


    message?: str

    status?: str

    syncAt?: str


schema AppsKruiseIoV1alpha1NodeImageStatusImageStatusesAnon:
    """ ImageStatus defines the pulling status of an image

    Attributes
    ----------
    tags : [AppsKruiseIoV1alpha1NodeImageStatusImageStatusesAnonTagsItems0], default is Undefined, required
         Represents statuses of pulling tasks on this node
    """


    tags: [AppsKruiseIoV1alpha1NodeImageStatusImageStatusesAnonTagsItems0]


schema AppsKruiseIoV1alpha1NodeImageStatusImageStatusesAnonTagsItems0:
    """ ImageTagStatus defines the pulling status of an image tag

    Attributes
    ----------
    completionTime : str, default is Undefined, optional
         Represents time when the pulling task was completed. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC.
    imageID : str, default is Undefined, optional
         Represents the ID of this image.
    message : str, default is Undefined, optional
         Represents the summary informations of this node
    phase : str, default is Undefined, required
         Represents the image pulling task phase.
    progress : int, default is Undefined, optional
         Represents the pulling progress of this tag, which is beetween 0-100. There is no guarantee of monotonic consistency, and it may be a rollback due to retry during pulling.
    startTime : str, default is Undefined, optional
         Represents time when the pulling task was acknowledged by the image puller. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC.
    tag : str, default is Undefined, required
         Represents the image tag.
    version : int, default is Undefined, optional
         Represents the internal version of this tag that the daemon handled.
    """


    completionTime?: str

    imageID?: str

    message?: str

    phase: str

    progress?: int

    startTime?: str

    tag: str

    version?: int


