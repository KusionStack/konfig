"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import base.pkg.kusion_kubernetes.apimachinery.apis

schema StatefulSet:
    """ StatefulSet is the Schema for the statefulsets API

    Attributes
    ----------
    __settings__ : {str:str}, default is {"output_type": "STANDALONE"}, optional
         existence of this attribute indicates that the model will be treated standalone by KCLVM.
    apiVersion : str, default is "apps.kruise.io/v1beta1", required
         APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "StatefulSet", required
         Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : apis.ObjectMeta, default is Undefined, optional
        metadata
    spec : AppsKruiseIoV1beta1StatefulSetSpec, default is Undefined, optional
        spec
    status : AppsKruiseIoV1beta1StatefulSetStatus, default is Undefined, optional
        status
    """

    __settings__?: {str:str} = {"output_type": "STANDALONE"}

    apiVersion: "apps.kruise.io/v1beta1" = "apps.kruise.io/v1beta1"

    kind: "StatefulSet" = "StatefulSet"

    metadata?: apis.ObjectMeta

    spec?: AppsKruiseIoV1beta1StatefulSetSpec

    status?: AppsKruiseIoV1beta1StatefulSetStatus

schema AppsKruiseIoV1beta1StatefulSetSpec:
    """ StatefulSetSpec defines the desired state of StatefulSet

    Attributes
    ----------
    podManagementPolicy : str, default is Undefined, optional
         podManagementPolicy controls how pods are created during initial scale up, when replacing pods on nodes, or when scaling down. The default policy is `OrderedReady`, where pods are created in increasing order (pod-0, then pod-1, etc) and the controller will wait until each pod is ready before continuing. When scaling down, the pods are removed in the opposite order. The alternative policy is `Parallel` which will create pods in parallel to match the desired scale without waiting, and on scale down will delete all pods at once.
    replicas : int, default is Undefined, optional
         replicas is the desired number of replicas of the given Template. These are replicas in the sense that they are instantiations of the same Template, but individual replicas also have a consistent identity. If unspecified, defaults to 1. TODO: Consider a rename of this field.
    revisionHistoryLimit : int, default is Undefined, optional
         revisionHistoryLimit is the maximum number of revisions that will be maintained in the StatefulSet's revision history. The revision history consists of all revisions not represented by a currently applied StatefulSetSpec version. The default value is 10.
    serviceName : str, default is Undefined, optional
         serviceName is the name of the service that governs this StatefulSet. This service must exist before the StatefulSet, and is responsible for the network identity of the set. Pods get DNS/hostnames that follow the pattern: pod-specific-string.serviceName.default.svc.cluster.local where "pod-specific-string" is managed by the StatefulSet controller.
    template : any, default is Undefined, required
         template is the object that describes the pod that will be created if insufficient replicas are detected. Each pod stamped out by the StatefulSet will fulfill this Template, but have a unique identity from the rest of the StatefulSet.
    volumeClaimTemplates : [any], default is Undefined, optional
         volumeClaimTemplates is a list of claims that pods are allowed to reference. The StatefulSet controller is responsible for mapping network identities to claims in a way that maintains the identity of a pod. Every claim in this list must have at least one matching (by name) volumeMount in one container in the template. A claim in this list takes precedence over any volumes in the template, with the same name. TODO: Define the behavior if a claim already exists with the same name.
    selector : AppsKruiseIoV1beta1StatefulSetSpecSelector, default is Undefined, required
        selector
    updateStrategy : AppsKruiseIoV1beta1StatefulSetSpecUpdateStrategy, default is Undefined, optional
        update strategy
    """

    podManagementPolicy?: str

    replicas?: int

    revisionHistoryLimit?: int

    serviceName?: str

    template: any

    volumeClaimTemplates?: [any]

    selector: AppsKruiseIoV1beta1StatefulSetSpecSelector

    updateStrategy?: AppsKruiseIoV1beta1StatefulSetSpecUpdateStrategy

schema AppsKruiseIoV1beta1StatefulSetSpecSelector:
    """ selector is a label query over pods that should match the replica count. It must match the pod template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors

    Attributes
    ----------
    matchExpressions : [AppsKruiseIoV1beta1StatefulSetSpecSelectorMatchExpressionsItems0], default is Undefined, optional
         matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
         matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    matchExpressions?: [AppsKruiseIoV1beta1StatefulSetSpecSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}

schema AppsKruiseIoV1beta1StatefulSetSpecSelectorMatchExpressionsItems0:
    """ A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
         key is the label key that the selector applies to.
    operator : str, default is Undefined, required
         operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
         values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """

    key: str

    operator: str

    values?: [str]

schema AppsKruiseIoV1beta1StatefulSetSpecUpdateStrategy:
    """ updateStrategy indicates the StatefulSetUpdateStrategy that will be employed to update Pods in the StatefulSet when a revision is made to Template.

    Attributes
    ----------
    $type : str, default is Undefined, optional
         Type indicates the type of the StatefulSetUpdateStrategy. Default is RollingUpdate.
    rollingUpdate : AppsKruiseIoV1beta1StatefulSetSpecUpdateStrategyRollingUpdate, default is Undefined, optional
        rolling update
    """

    $type?: str

    rollingUpdate?: AppsKruiseIoV1beta1StatefulSetSpecUpdateStrategyRollingUpdate

schema AppsKruiseIoV1beta1StatefulSetSpecUpdateStrategyRollingUpdate:
    """ RollingUpdate is used to communicate parameters when Type is RollingUpdateStatefulSetStrategyType.

    Attributes
    ----------
    maxUnavailable : int, default is Undefined, optional
         The maximum number of pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%). Absolute number is calculated from percentage by rounding down. Also, maxUnavailable can just be allowed to work with Parallel podManagementPolicy. Defaults to 1.
    minReadySeconds : int, default is Undefined, optional
         MinReadySeconds indicates how long will the pod be considered ready after it's updated. MinReadySeconds works with both OrderedReady and Parallel podManagementPolicy. It affects the pod scale up speed when the podManagementPolicy is set to be OrderedReady. Combined with MaxUnavailable, it affects the pod update speed regardless of podManagementPolicy. Default value is 0, max is 300.
    partition : int, default is Undefined, optional
         Partition indicates the ordinal at which the StatefulSet should be partitioned by default. But if unorderedUpdate has been set:   - Partition indicates the number of pods with non-updated revisions when rolling update.   - It means controller will update $(replicas - partition) number of pod. Default value is 0.
    paused : bool, default is Undefined, optional
         Paused indicates that the StatefulSet is paused. Default value is false
    podUpdatePolicy : str, default is Undefined, optional
         PodUpdatePolicy indicates how pods should be updated Default value is "ReCreate"
    inPlaceUpdateStrategy : AppsKruiseIoV1beta1StatefulSetSpecUpdateStrategyRollingUpdateInPlaceUpdateStrategy, default is Undefined, optional
        in place update strategy
    unorderedUpdate : AppsKruiseIoV1beta1StatefulSetSpecUpdateStrategyRollingUpdateUnorderedUpdate, default is Undefined, optional
        unordered update
    """

    maxUnavailable?: int

    minReadySeconds?: int

    partition?: int

    paused?: bool

    podUpdatePolicy?: str

    inPlaceUpdateStrategy?: AppsKruiseIoV1beta1StatefulSetSpecUpdateStrategyRollingUpdateInPlaceUpdateStrategy

    unorderedUpdate?: AppsKruiseIoV1beta1StatefulSetSpecUpdateStrategyRollingUpdateUnorderedUpdate

schema AppsKruiseIoV1beta1StatefulSetSpecUpdateStrategyRollingUpdateInPlaceUpdateStrategy:
    """ InPlaceUpdateStrategy contains strategies for in-place update.

    Attributes
    ----------
    gracePeriodSeconds : int, default is Undefined, optional
         GracePeriodSeconds is the timespan between set Pod status to not-ready and update images in Pod spec when in-place update a Pod.
    """

    gracePeriodSeconds?: int

schema AppsKruiseIoV1beta1StatefulSetSpecUpdateStrategyRollingUpdateUnorderedUpdate:
    """ UnorderedUpdate contains strategies for non-ordered update. If it is not nil, pods will be updated with non-ordered sequence. Noted that UnorderedUpdate can only be allowed to work with Parallel podManagementPolicy

    Attributes
    ----------
    priorityStrategy : AppsKruiseIoV1beta1StatefulSetSpecUpdateStrategyRollingUpdateUnorderedUpdatePriorityStrategy, default is Undefined, optional
        priority strategy
    """

    priorityStrategy?: AppsKruiseIoV1beta1StatefulSetSpecUpdateStrategyRollingUpdateUnorderedUpdatePriorityStrategy

schema AppsKruiseIoV1beta1StatefulSetSpecUpdateStrategyRollingUpdateUnorderedUpdatePriorityStrategy:
    """ Priorities are the rules for calculating the priority of updating pods. Each pod to be updated, will pass through these terms and get a sum of weights.

    Attributes
    ----------
    orderPriority : [AppsKruiseIoV1beta1StatefulSetSpecUpdateStrategyRollingUpdateUnorderedUpdatePriorityStrategyOrderPriorityItems0], default is Undefined, optional
         Order priority terms, pods will be sorted by the value of orderedKey. For example: ``` orderPriority: - orderedKey: key1 - orderedKey: key2 ``` First, all pods which have key1 in labels will be sorted by the value of key1. Then, the left pods which have no key1 but have key2 in labels will be sorted by the value of key2 and put behind those pods have key1.
    weightPriority : [AppsKruiseIoV1beta1StatefulSetSpecUpdateStrategyRollingUpdateUnorderedUpdatePriorityStrategyWeightPriorityItems0], default is Undefined, optional
         Weight priority terms, pods will be sorted by the sum of all terms weight.
    """

    orderPriority?: [AppsKruiseIoV1beta1StatefulSetSpecUpdateStrategyRollingUpdateUnorderedUpdatePriorityStrategyOrderPriorityItems0]

    weightPriority?: [AppsKruiseIoV1beta1StatefulSetSpecUpdateStrategyRollingUpdateUnorderedUpdatePriorityStrategyWeightPriorityItems0]

schema AppsKruiseIoV1beta1StatefulSetSpecUpdateStrategyRollingUpdateUnorderedUpdatePriorityStrategyOrderPriorityItems0:
    """ UpdatePriorityOrder defines order priority.

    Attributes
    ----------
    orderedKey : str, default is Undefined, required
         Calculate priority by value of this key. Values of this key, will be sorted by GetInt(val). GetInt method will find the last int in value, such as getting 5 in value '5', getting 10 in value 'sts-10'.
    """

    orderedKey: str

schema AppsKruiseIoV1beta1StatefulSetSpecUpdateStrategyRollingUpdateUnorderedUpdatePriorityStrategyWeightPriorityItems0:
    """ UpdatePriorityWeightTerm defines weight priority.

    Attributes
    ----------
    matchSelector : AppsKruiseIoV1beta1StatefulSetSpecUpdateStrategyRollingUpdateUnorderedUpdatePriorityStrategyWeightPriorityItems0MatchSelector, default is Undefined, required
        match selector
    weight : int, default is Undefined, required
         Weight associated with matching the corresponding matchExpressions, in the range 1-100.
    """

    matchSelector: AppsKruiseIoV1beta1StatefulSetSpecUpdateStrategyRollingUpdateUnorderedUpdatePriorityStrategyWeightPriorityItems0MatchSelector

    weight: int

schema AppsKruiseIoV1beta1StatefulSetSpecUpdateStrategyRollingUpdateUnorderedUpdatePriorityStrategyWeightPriorityItems0MatchSelector:
    """ MatchSelector is used to select by pod's labels.

    Attributes
    ----------
    matchExpressions : [AppsKruiseIoV1beta1StatefulSetSpecUpdateStrategyRollingUpdateUnorderedUpdatePriorityStrategyWeightPriorityItems0MatchSelectorMatchExpressionsItems0], default is Undefined, optional
         matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
         matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """

    matchExpressions?: [AppsKruiseIoV1beta1StatefulSetSpecUpdateStrategyRollingUpdateUnorderedUpdatePriorityStrategyWeightPriorityItems0MatchSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}

schema AppsKruiseIoV1beta1StatefulSetSpecUpdateStrategyRollingUpdateUnorderedUpdatePriorityStrategyWeightPriorityItems0MatchSelectorMatchExpressionsItems0:
    """ A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
         key is the label key that the selector applies to.
    operator : str, default is Undefined, required
         operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
         values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """

    key: str

    operator: str

    values?: [str]

schema AppsKruiseIoV1beta1StatefulSetStatus:
    """ StatefulSetStatus defines the observed state of StatefulSet

    Attributes
    ----------
    availableReplicas : int, default is Undefined, required
         AvailableReplicas is the number of Pods created by the StatefulSet controller that have been ready for minReadySeconds.
    collisionCount : int, default is Undefined, optional
         collisionCount is the count of hash collisions for the StatefulSet. The StatefulSet controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
    conditions : [any], default is Undefined, optional
         Represents the latest available observations of a statefulset's current state.
    currentReplicas : int, default is Undefined, required
         currentReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by currentRevision.
    currentRevision : str, default is Undefined, optional
         currentRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [0,currentReplicas).
    labelSelector : str, default is Undefined, optional
         LabelSelector is label selectors for query over pods that should match the replica count used by HPA.
    observedGeneration : int, default is Undefined, optional
         observedGeneration is the most recent generation observed for this StatefulSet. It corresponds to the StatefulSet's generation, which is updated on mutation by the API Server.
    readyReplicas : int, default is Undefined, required
         readyReplicas is the number of Pods created by the StatefulSet controller that have a Ready Condition.
    replicas : int, default is Undefined, required
         replicas is the number of Pods created by the StatefulSet controller.
    updateRevision : str, default is Undefined, optional
         updateRevision, if not empty, indicates the version of the StatefulSet used to generate Pods in the sequence [replicas-updatedReplicas,replicas)
    updatedReplicas : int, default is Undefined, required
         updatedReplicas is the number of Pods created by the StatefulSet controller from the StatefulSet version indicated by updateRevision.
    """

    availableReplicas: int

    collisionCount?: int

    conditions?: [any]

    currentReplicas: int

    currentRevision?: str

    labelSelector?: str

    observedGeneration?: int

    readyReplicas: int

    replicas: int

    updateRevision?: str

    updatedReplicas: int
