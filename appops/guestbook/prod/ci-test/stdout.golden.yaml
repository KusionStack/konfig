resources:
- id: apps/v1:Deployment:guestbook:redis-leader
  type: Kubernetes
  attributes:
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: redis-leader
      namespace: guestbook
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/component: redis-leader
          app.kubernetes.io/env: prod
          app.kubernetes.io/instance: guestbook-prod
          app.kubernetes.io/name: guestbook
          cluster.x-k8s.io/cluster-name: demo-cluster-name
      template:
        metadata:
          labels:
            app.kubernetes.io/component: redis-leader
            app.kubernetes.io/env: prod
            app.kubernetes.io/instance: guestbook-prod
            app.kubernetes.io/name: guestbook
            cluster.x-k8s.io/cluster-name: demo-cluster-name
        spec:
          containers:
          - image: docker.io/redis:6.0.5
            name: main
            ports:
            - containerPort: 6379
              protocol: TCP
            resources:
              limits:
                cpu: 100m
                ephemeral-storage: 1Gi
                memory: 100Mi
              requests:
                cpu: 100m
                ephemeral-storage: 1Gi
                memory: 100Mi
  dependsOn:
  - v1:Namespace:guestbook
  - v1:Service:guestbook:redis-leader
  - v1:Service:guestbook:redis-follower
  - v1:Service:guestbook:frontend
- id: apps/v1:Deployment:guestbook:redis-follower
  type: Kubernetes
  attributes:
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: redis-follower
      namespace: guestbook
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/component: redis-follower
          app.kubernetes.io/env: prod
          app.kubernetes.io/instance: guestbook-prod
          app.kubernetes.io/name: guestbook
          cluster.x-k8s.io/cluster-name: demo-cluster-name
      template:
        metadata:
          labels:
            app.kubernetes.io/component: redis-follower
            app.kubernetes.io/env: prod
            app.kubernetes.io/instance: guestbook-prod
            app.kubernetes.io/name: guestbook
            cluster.x-k8s.io/cluster-name: demo-cluster-name
        spec:
          containers:
          - image: gcr.io/google_samples/gb-redis-follower:v2
            name: main
            ports:
            - containerPort: 6379
              protocol: TCP
            resources:
              limits:
                cpu: 100m
                ephemeral-storage: 1Gi
                memory: 100Mi
              requests:
                cpu: 100m
                ephemeral-storage: 1Gi
                memory: 100Mi
  dependsOn:
  - v1:Namespace:guestbook
  - v1:Service:guestbook:redis-leader
  - v1:Service:guestbook:redis-follower
  - v1:Service:guestbook:frontend
- id: apps/v1:Deployment:guestbook:frontend
  type: Kubernetes
  attributes:
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: frontend
      namespace: guestbook
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/component: frontend
          app.kubernetes.io/env: prod
          app.kubernetes.io/instance: guestbook-prod
          app.kubernetes.io/name: guestbook
          cluster.x-k8s.io/cluster-name: demo-cluster-name
      template:
        metadata:
          labels:
            app.kubernetes.io/component: frontend
            app.kubernetes.io/env: prod
            app.kubernetes.io/instance: guestbook-prod
            app.kubernetes.io/name: guestbook
            cluster.x-k8s.io/cluster-name: demo-cluster-name
        spec:
          containers:
          - env:
            - name: GET_HOSTS_FROM
              value: dns
            image: gcr.io/google-samples/gb-frontend:v3
            name: php-redis
            ports:
            - containerPort: 80
              protocol: TCP
            resources:
              limits:
                cpu: 100m
                ephemeral-storage: 1Gi
                memory: 100Mi
              requests:
                cpu: 100m
                ephemeral-storage: 1Gi
                memory: 100Mi
  dependsOn:
  - v1:Namespace:guestbook
  - v1:Service:guestbook:redis-leader
  - v1:Service:guestbook:redis-follower
  - v1:Service:guestbook:frontend
- id: v1:Namespace:guestbook
  type: Kubernetes
  attributes:
    apiVersion: v1
    kind: Namespace
    metadata:
      name: guestbook
- id: v1:Service:guestbook:redis-leader
  type: Kubernetes
  attributes:
    apiVersion: v1
    kind: Service
    metadata:
      name: redis-leader
      namespace: guestbook
    spec:
      ports:
      - port: 6379
      selector:
        app.kubernetes.io/component: redis-leader
        app.kubernetes.io/env: prod
        app.kubernetes.io/instance: guestbook-prod
        app.kubernetes.io/name: guestbook
        cluster.x-k8s.io/cluster-name: demo-cluster-name
  dependsOn:
  - v1:Namespace:guestbook
- id: v1:Service:guestbook:redis-follower
  type: Kubernetes
  attributes:
    apiVersion: v1
    kind: Service
    metadata:
      name: redis-follower
      namespace: guestbook
    spec:
      ports:
      - port: 6379
      selector:
        app.kubernetes.io/component: redis-follower
        app.kubernetes.io/env: prod
        app.kubernetes.io/instance: guestbook-prod
        app.kubernetes.io/name: guestbook
        cluster.x-k8s.io/cluster-name: demo-cluster-name
  dependsOn:
  - v1:Namespace:guestbook
- id: v1:Service:guestbook:frontend
  type: Kubernetes
  attributes:
    apiVersion: v1
    kind: Service
    metadata:
      name: frontend
      namespace: guestbook
    spec:
      ports:
      - port: 80
      selector:
        app.kubernetes.io/component: frontend
        app.kubernetes.io/env: prod
        app.kubernetes.io/instance: guestbook-prod
        app.kubernetes.io/name: guestbook
        cluster.x-k8s.io/cluster-name: demo-cluster-name
  dependsOn:
  - v1:Namespace:guestbook
