resources:
- id: apps/v1:Deployment:clickhouse-operator:clickhouse-operatorprod
  type: Kubernetes
  attributes:
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: clickhouse-operator
        clickhouse.altinity.com/chop: 0.19.2
      name: clickhouse-operatorprod
      namespace: clickhouse-operator
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: clickhouse-operator
      template:
        metadata:
          annotations:
            prometheus.io/port: "8888"
            prometheus.io/scrape: "true"
          labels:
            app: clickhouse-operator
        spec:
          containers:
          - env:
            - name: OPERATOR_POD_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: OPERATOR_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: OPERATOR_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: OPERATOR_POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: OPERATOR_POD_SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.serviceAccountName
            - name: OPERATOR_CONTAINER_CPU_REQUEST
              valueFrom:
                resourceFieldRef:
                  containerName: clickhouse-operator
                  divisor: "1"
                  resource: requests.cpu
            - name: OPERATOR_CONTAINER_CPU_LIMIT
              valueFrom:
                resourceFieldRef:
                  containerName: clickhouse-operator
                  divisor: "1"
                  resource: limits.cpu
            - name: OPERATOR_CONTAINER_MEM_REQUEST
              valueFrom:
                resourceFieldRef:
                  containerName: clickhouse-operator
                  divisor: "1"
                  resource: requests.memory
            - name: OPERATOR_CONTAINER_MEM_LIMIT
              valueFrom:
                resourceFieldRef:
                  containerName: clickhouse-operator
                  divisor: "1"
                  resource: limits.memory
            image: altinity/clickhouse-operator:0.19.2
            name: clickhouse-operator
            volumeMounts:
            - mountPath: /etc/clickhouse-operator
              name: etc-clickhouse-operator-folder
            - mountPath: /etc/clickhouse-operator/conf.d
              name: etc-clickhouse-operator-confd-folder
            - mountPath: /etc/clickhouse-operator/config.d
              name: etc-clickhouse-operator-configd-folder
            - mountPath: /etc/clickhouse-operator/templates.d
              name: etc-clickhouse-operator-templatesd-folder
            - mountPath: /etc/clickhouse-operator/users.d
              name: etc-clickhouse-operator-usersd-folder
          - image: altinity/metrics-exporter:0.19.2
            name: metrics-exporter
            volumeMounts:
            - mountPath: /etc/clickhouse-operator
              name: etc-clickhouse-operator-folder
            - mountPath: /etc/clickhouse-operator/conf.d
              name: etc-clickhouse-operator-confd-folder
            - mountPath: /etc/clickhouse-operator/config.d
              name: etc-clickhouse-operator-configd-folder
            - mountPath: /etc/clickhouse-operator/templates.d
              name: etc-clickhouse-operator-templatesd-folder
            - mountPath: /etc/clickhouse-operator/users.d
              name: etc-clickhouse-operator-usersd-folder
          serviceAccountName: clickhouse-operator
          volumes:
          - configMap:
              name: etc-clickhouse-operator-files
            name: etc-clickhouse-operator-folder
          - configMap:
              name: etc-clickhouse-operator-confd-files
            name: etc-clickhouse-operator-confd-folder
          - configMap:
              name: etc-clickhouse-operator-configd-files
            name: etc-clickhouse-operator-configd-folder
          - configMap:
              name: etc-clickhouse-operator-templatesd-files
            name: etc-clickhouse-operator-templatesd-folder
          - configMap:
              name: etc-clickhouse-operator-usersd-files
            name: etc-clickhouse-operator-usersd-folder
  dependsOn:
  - rbac.authorization.k8s.io/v1:ClusterRole:clickhouse-operator-kube-system
  - rbac.authorization.k8s.io/v1:ClusterRoleBinding:clickhouse-operator-kube-system
  - v1:Namespace:clickhouse-operator
  - v1:ServiceAccount:clickhouse-operator:clickhouse-operator
  - v1:ConfigMap:clickhouse-operator:etc-clickhouse-operator-files
  - v1:ConfigMap:clickhouse-operator:etc-clickhouse-operator-confd-files
  - v1:ConfigMap:clickhouse-operator:etc-clickhouse-operator-configd-files
  - v1:ConfigMap:clickhouse-operator:etc-clickhouse-operator-templatesd-files
  - v1:ConfigMap:clickhouse-operator:etc-clickhouse-operator-usersd-files
  - v1:Service:clickhouse-operator:clickhouse-operator-metrics
- id: v1:Namespace:clickhouse-operator
  type: Kubernetes
  attributes:
    apiVersion: v1
    kind: Namespace
    metadata:
      name: clickhouse-operator
  dependsOn:
  - rbac.authorization.k8s.io/v1:ClusterRole:clickhouse-operator-kube-system
  - rbac.authorization.k8s.io/v1:ClusterRoleBinding:clickhouse-operator-kube-system
- id: v1:ConfigMap:clickhouse-operator:etc-clickhouse-operator-files
  type: Kubernetes
  attributes:
    apiVersion: v1
    data:
      config.yaml: |
        # IMPORTANT
        # This file is auto-generated
        # Do not edit this file - all changes would be lost
        # Edit appropriate template in the following folder:
        # deploy/builder/templates-config
        # IMPORTANT
        #
        # Template parameters available:
        #   watchNamespaces
        #   chUsername
        #   chPassword
        #   password_sha256_hex

        ################################################
        ##
        ## Watch Section
        ##
        ################################################
        watch:
          # List of namespaces where clickhouse-operator watches for events.
          # Concurrently running operators should watch on different namespaces
          #namespaces: ["dev", "test"]
          namespaces: []

        clickhouse:
          configuration:
            ################################################
            ##
            ## Configuration Files Section
            ##
            ################################################
            file:
              path:
                # Path to the folder where ClickHouse configuration files common for all instances within a CHI are located.
                common: config.d
                # Path to the folder where ClickHouse configuration files unique for each instance (host) within a CHI are located.
                host: conf.d
                # Path to the folder where ClickHouse configuration files with users settings are located.
                # Files are common for all instances within a CHI.
                user: users.d
            ################################################
            ##
            ## Configuration Users Section
            ##
            ################################################
            user:
              default:
                # Default values for ClickHouse user configuration
                # 1. user/profile - string
                # 2. user/quota - string
                # 3. user/networks/ip - multiple strings
                # 4. user/password - string
                profile: default
                quota: default
                networksIP:
                  - "::1"
                  - "127.0.0.1"
                password: "default"
            ################################################
            ##
            ## Configuration Network Section
            ##
            ################################################
            network:
              # Default host_regexp to limit network connectivity from outside
              hostRegexpTemplate: "(chi-{chi}-[^.]+\d+-\d+|clickhouse\-{chi})\.{namespace}\.svc\.cluster\.local$"
          ################################################
          ##
          ## Access to ClickHouse instances
          ##
          ################################################
          access:
            # ClickHouse credentials (username, password and port) to be used by operator to connect to ClickHouse instances
            # for:
            # 1. Metrics requests
            # 2. Schema maintenance
            # 3. DROP DNS CACHE
            # User with such credentials can be specified in additional ClickHouse .xml config files,
            # located in `chUsersConfigsPath` folder
            username: "clickhouse_operator"
            password: "clickhouse_operator_password"
            secret:
              # Location of k8s Secret with username and password to be used by operator to connect to ClickHouse instances
              # Can be used instead of explicitly specified username and password
              namespace: ""
              name: ""
            # Port where to connect to ClickHouse instances to
            port: 8123

        ################################################
        ##
        ## Templates Section
        ##
        ################################################
        template:
          chi:
            # Path to the folder where ClickHouseInstallation .yaml manifests are located.
            # Manifests are applied in sorted alpha-numeric order.
            path: templates.d

        ################################################
        ##
        ## Reconcile Section
        ##
        ################################################
        reconcile:
          runtime:
            # Max number of concurrent reconciles in progress
            threadsNumber: 10

          statefulSet:
            create:
              # What to do in case created StatefulSet is not in Ready after `statefulSetUpdateTimeout` seconds
              # Possible options:
              # 1. abort - do nothing, just break the process and wait for admin
              # 2. delete - delete newly created problematic StatefulSet
              # 3. ignore - ignore error, pretend nothing happened and move on to the next StatefulSet
              onFailure: ignore

            update:
              # How many seconds to wait for created/updated StatefulSet to be Ready
              timeout: 300
              # How many seconds to wait between checks for created/updated StatefulSet status
              pollInterval: 5
              # What to do in case updated StatefulSet is not in Ready after `statefulSetUpdateTimeout` seconds
              # Possible options:
              # 1. abort - do nothing, just break the process and wait for admin
              # 2. rollback - delete Pod and rollback StatefulSet to previous Generation.
              # Pod would be recreated by StatefulSet based on rollback-ed configuration
              # 3. ignore - ignore error, pretend nothing happened and move on to the next StatefulSet
              onFailure: rollback

          host:
            # Whether reconciler should wait for host:
            # to be excluded from cluster OR
            # to be included into cluster
            # respectfully
            wait:
              exclude: true
              include: false

        ################################################
        ##
        ## Annotations management
        ##
        ################################################
        annotation:
          # Applied when:
          #  1. Propagating annotations from the CHI's `metadata.annotations` to child objects' `metadata.annotations`,
          #  2. Propagating annotations from the CHI Template's `metadata.annotations` to CHI's `metadata.annotations`,
          # Include annotations from the following list:
          # Applied only when not empty. Empty list means "include all, no selection"
          include: []
          # Exclude annotations from the following list:
          exclude: []

        ################################################
        ##
        ## Labels management
        ##
        ################################################
        label:
          # Applied when:
          #  1. Propagating labels from the CHI's `metadata.labels` to child objects' `metadata.labels`,
          #  2. Propagating labels from the CHI Template's `metadata.labels` to CHI's `metadata.labels`,
          # Include labels from the following list:
          # Applied only when not empty. Empty list means "include all, no selection"
          include: []
          # Exclude labels from the following list:
          exclude: []
          # Whether to append *Scope* labels to StatefulSet and Pod.
          # Full list of available *scope* labels check in labeler.go
          #  LabelShardScopeIndex
          #  LabelReplicaScopeIndex
          #  LabelCHIScopeIndex
          #  LabelCHIScopeCycleSize
          #  LabelCHIScopeCycleIndex
          #  LabelCHIScopeCycleOffset
          #  LabelClusterScopeIndex
          #  LabelClusterScopeCycleSize
          #  LabelClusterScopeCycleIndex
          #  LabelClusterScopeCycleOffset
          appendScope: "no"

        ################################################
        ##
        ## StatefulSet management
        ##
        ################################################
        statefulSet:
          revisionHistoryLimit: 0

        ################################################
        ##
        ## Pod management
        ##
        ################################################
        pod:
          # Grace period for Pod termination.
          # How many seconds to wait between sending
          # SIGTERM and SIGKILL during Pod termination process.
          # Increase this number is case of slow shutdown.
          terminationGracePeriod: 30

        ################################################
        ##
        ## Log parameters
        ##
        ################################################
        logger:
          logtostderr: "true"
          alsologtostderr: "false"
          v: "1"
          stderrthreshold: ""
          vmodule: ""
          log_backtrace_at: ""
    kind: ConfigMap
    metadata:
      labels:
        app: clickhouse-operator
        clickhouse.altinity.com/chop: 0.19.2
      name: etc-clickhouse-operator-files
      namespace: clickhouse-operator
  dependsOn:
  - rbac.authorization.k8s.io/v1:ClusterRole:clickhouse-operator-kube-system
  - rbac.authorization.k8s.io/v1:ClusterRoleBinding:clickhouse-operator-kube-system
  - v1:Namespace:clickhouse-operator
  - v1:ServiceAccount:clickhouse-operator:clickhouse-operator
- id: v1:ConfigMap:clickhouse-operator:etc-clickhouse-operator-confd-files
  type: Kubernetes
  attributes:
    apiVersion: v1
    kind: ConfigMap
    metadata:
      labels:
        app: clickhouse-operator
        clickhouse.altinity.com/chop: 0.19.2
      name: etc-clickhouse-operator-confd-files
      namespace: clickhouse-operator
  dependsOn:
  - rbac.authorization.k8s.io/v1:ClusterRole:clickhouse-operator-kube-system
  - rbac.authorization.k8s.io/v1:ClusterRoleBinding:clickhouse-operator-kube-system
  - v1:Namespace:clickhouse-operator
  - v1:ServiceAccount:clickhouse-operator:clickhouse-operator
- id: v1:ConfigMap:clickhouse-operator:etc-clickhouse-operator-configd-files
  type: Kubernetes
  attributes:
    apiVersion: v1
    data:
      01-clickhouse-01-listen.xml: |
        <!-- IMPORTANT -->
        <!-- This file is auto-generated -->
        <!-- Do not edit this file - all changes would be lost -->
        <!-- Edit appropriate template in the following folder: -->
        <!-- deploy/builder/templates-config -->
        <!-- IMPORTANT -->
        <yandex>
            <!-- Listen wildcard address to allow accepting connections from other containers and host network. -->
            <listen_host>::</listen_host>
            <listen_host>0.0.0.0</listen_host>
            <listen_try>1</listen_try>
        </yandex>
      01-clickhouse-02-logger.xml: |
        <!-- IMPORTANT -->
        <!-- This file is auto-generated -->
        <!-- Do not edit this file - all changes would be lost -->
        <!-- Edit appropriate template in the following folder: -->
        <!-- deploy/builder/templates-config -->
        <!-- IMPORTANT -->
        <yandex>
            <logger>
                <!-- Possible levels: https://github.com/pocoproject/poco/blob/develop/Foundation/include/Poco/Logger.h#L105 -->
                <level>debug</level>
                <log>/var/log/clickhouse-server/clickhouse-server.log</log>
                <errorlog>/var/log/clickhouse-server/clickhouse-server.err.log</errorlog>
                <size>1000M</size>
                <count>10</count>
                <!-- Default behavior is autodetection (log to console if not daemon mode and is tty) -->
                <console>1</console>
            </logger>
        </yandex>
      01-clickhouse-03-query_log.xml: |
        <!-- IMPORTANT -->
        <!-- This file is auto-generated -->
        <!-- Do not edit this file - all changes would be lost -->
        <!-- Edit appropriate template in the following folder: -->
        <!-- deploy/builder/templates-config -->
        <!-- IMPORTANT -->
        <yandex>
            <query_log replace="1">
                <database>system</database>
                <table>query_log</table>
                <engine>Engine = MergeTree PARTITION BY event_date ORDER BY event_time TTL event_date + interval 30 day</engine>
                <flush_interval_milliseconds>7500</flush_interval_milliseconds>
            </query_log>
            <query_thread_log remove="1"/>
        </yandex>
      01-clickhouse-04-part_log.xml: |
        <!-- IMPORTANT -->
        <!-- This file is auto-generated -->
        <!-- Do not edit this file - all changes would be lost -->
        <!-- Edit appropriate template in the following folder: -->
        <!-- deploy/builder/templates-config -->
        <!-- IMPORTANT -->
        <yandex>
            <part_log replace="1">
                <database>system</database>
                <table>part_log</table>
                <engine>Engine = MergeTree PARTITION BY event_date ORDER BY event_time TTL event_date + interval 30 day</engine>
                <flush_interval_milliseconds>7500</flush_interval_milliseconds>
            </part_log>
        </yandex>
    kind: ConfigMap
    metadata:
      labels:
        app: clickhouse-operator
        clickhouse.altinity.com/chop: 0.19.2
      name: etc-clickhouse-operator-configd-files
      namespace: clickhouse-operator
  dependsOn:
  - rbac.authorization.k8s.io/v1:ClusterRole:clickhouse-operator-kube-system
  - rbac.authorization.k8s.io/v1:ClusterRoleBinding:clickhouse-operator-kube-system
  - v1:Namespace:clickhouse-operator
  - v1:ServiceAccount:clickhouse-operator:clickhouse-operator
- id: v1:ConfigMap:clickhouse-operator:etc-clickhouse-operator-templatesd-files
  type: Kubernetes
  attributes:
    apiVersion: v1
    data:
      001-templates.json.example: |
        {
          "apiVersion": "clickhouse.altinity.com/v1",
          "kind": "ClickHouseInstallationTemplate",
          "metadata": {
            "name": "01-default-volumeclaimtemplate"
          },
          "spec": {
            "templates": {
              "volumeClaimTemplates": [
                {
                  "name": "chi-default-volume-claim-template",
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "2Gi"
                      }
                    }
                  }
                }
              ],
              "podTemplates": [
                {
                  "name": "chi-default-oneperhost-pod-template",
                  "distribution": "OnePerHost",
                  "spec": {
                    "containers" : [
                      {
                        "name": "clickhouse",
                        "image": "clickhouse/clickhouse-server:22.3",
                        "ports": [
                          {
                            "name": "http",
                            "containerPort": 8123
                          },
                          {
                            "name": "client",
                            "containerPort": 9000
                          },
                          {
                            "name": "interserver",
                            "containerPort": 9009
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      default-pod-template.yaml.example: |
        apiVersion: "clickhouse.altinity.com/v1"
        kind: "ClickHouseInstallationTemplate"
        metadata:
          name: "default-oneperhost-pod-template"
        spec:
          templates:
            podTemplates:
              - name: default-oneperhost-pod-template
                distribution: "OnePerHost"
      default-storage-template.yaml.example: |
        apiVersion: "clickhouse.altinity.com/v1"
        kind: "ClickHouseInstallationTemplate"
        metadata:
          name: "default-storage-template-2Gi"
        spec:
          templates:
            volumeClaimTemplates:
              - name: default-storage-template-2Gi
                spec:
                  accessModes:
                    - ReadWriteOnce
                  resources:
                    requests:
                      storage: 2Gi
      readme: |
        Templates in this folder are packaged with an operator and available via 'useTemplate'
    kind: ConfigMap
    metadata:
      labels:
        app: clickhouse-operator
        clickhouse.altinity.com/chop: 0.19.2
      name: etc-clickhouse-operator-templatesd-files
      namespace: clickhouse-operator
  dependsOn:
  - rbac.authorization.k8s.io/v1:ClusterRole:clickhouse-operator-kube-system
  - rbac.authorization.k8s.io/v1:ClusterRoleBinding:clickhouse-operator-kube-system
  - v1:Namespace:clickhouse-operator
  - v1:ServiceAccount:clickhouse-operator:clickhouse-operator
- id: v1:ConfigMap:clickhouse-operator:etc-clickhouse-operator-usersd-files
  type: Kubernetes
  attributes:
    apiVersion: v1
    data:
      01-clickhouse-user.xml: |
        <!-- IMPORTANT -->
        <!-- This file is auto-generated -->
        <!-- Do not edit this file - all changes would be lost -->
        <!-- Edit appropriate template in the following folder: -->
        <!-- deploy/builder/templates-config -->
        <!-- IMPORTANT -->
        <yandex>
            <users>
                <clickhouse_operator>
                    <networks>
                        <ip>127.0.0.1</ip>
                    </networks>
                    <password_sha256_hex>716b36073a90c6fe1d445ac1af85f4777c5b7a155cea359961826a030513e448</password_sha256_hex>
                    <profile>clickhouse_operator</profile>
                    <quota>default</quota>
                </clickhouse_operator>
            </users>
            <profiles>
                <clickhouse_operator>
                    <log_queries>0</log_queries>
                    <skip_unavailable_shards>1</skip_unavailable_shards>
                    <http_connection_timeout>10</http_connection_timeout>
                </clickhouse_operator>
            </profiles>
        </yandex>
      02-clickhouse-default-profile.xml: |
        <!-- IMPORTANT -->
        <!-- This file is auto-generated -->
        <!-- Do not edit this file - all changes would be lost -->
        <!-- Edit appropriate template in the following folder: -->
        <!-- deploy/builder/templates-config -->
        <!-- IMPORTANT -->
        <yandex>
            <profiles>
            <default>
                <log_queries>1</log_queries>
                <connect_timeout_with_failover_ms>1000</connect_timeout_with_failover_ms>
                <distributed_aggregation_memory_efficient>1</distributed_aggregation_memory_efficient>
                <parallel_view_processing>1</parallel_view_processing>
            </default>
            </profiles>
        </yandex>
      03-database-ordinary.xml: |
        <!-- IMPORTANT -->
        <!-- This file is auto-generated -->
        <!-- Do not edit this file - all changes would be lost -->
        <!-- Edit appropriate template in the following folder: -->
        <!-- deploy/builder/templates-config -->
        <!-- IMPORTANT -->
        <!--  Remove it for ClickHouse versions before 20.4 -->
        <yandex>
            <profiles>
                <default>
                    <default_database_engine>Ordinary</default_database_engine>
                </default>
            </profiles>
        </yandex>
    kind: ConfigMap
    metadata:
      labels:
        app: clickhouse-operator
        clickhouse.altinity.com/chop: 0.19.2
      name: etc-clickhouse-operator-usersd-files
      namespace: clickhouse-operator
  dependsOn:
  - rbac.authorization.k8s.io/v1:ClusterRole:clickhouse-operator-kube-system
  - rbac.authorization.k8s.io/v1:ClusterRoleBinding:clickhouse-operator-kube-system
  - v1:Namespace:clickhouse-operator
  - v1:ServiceAccount:clickhouse-operator:clickhouse-operator
- id: v1:Service:clickhouse-operator:clickhouse-operator-metrics
  type: Kubernetes
  attributes:
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: clickhouse-operator
        clickhouse.altinity.com/chop: 0.19.2
      name: clickhouse-operator-metrics
      namespace: clickhouse-operator
    spec:
      ports:
      - name: clickhouse-operator-metrics
        port: 8888
      selector:
        app: clickhouse-operator
  dependsOn:
  - rbac.authorization.k8s.io/v1:ClusterRole:clickhouse-operator-kube-system
  - rbac.authorization.k8s.io/v1:ClusterRoleBinding:clickhouse-operator-kube-system
  - v1:Namespace:clickhouse-operator
  - v1:ServiceAccount:clickhouse-operator:clickhouse-operator
  - v1:ConfigMap:clickhouse-operator:etc-clickhouse-operator-files
  - v1:ConfigMap:clickhouse-operator:etc-clickhouse-operator-confd-files
  - v1:ConfigMap:clickhouse-operator:etc-clickhouse-operator-configd-files
  - v1:ConfigMap:clickhouse-operator:etc-clickhouse-operator-templatesd-files
  - v1:ConfigMap:clickhouse-operator:etc-clickhouse-operator-usersd-files
- id: v1:ServiceAccount:clickhouse-operator:clickhouse-operator
  type: Kubernetes
  attributes:
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      labels:
        clickhouse.altinity.com/chop: 0.19.2
      name: clickhouse-operator
      namespace: clickhouse-operator
  dependsOn:
  - rbac.authorization.k8s.io/v1:ClusterRole:clickhouse-operator-kube-system
  - rbac.authorization.k8s.io/v1:ClusterRoleBinding:clickhouse-operator-kube-system
  - v1:Namespace:clickhouse-operator
- id: rbac.authorization.k8s.io/v1:ClusterRoleBinding:clickhouse-operator-kube-system
  type: Kubernetes
  attributes:
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        clickhouse.altinity.com/chop: 0.19.2
      name: clickhouse-operator-kube-system
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: clickhouse-operator-kube-system
    subjects:
    - kind: ServiceAccount
      name: clickhouse-operator
      namespace: kube-system
  dependsOn:
  - rbac.authorization.k8s.io/v1:ClusterRole:clickhouse-operator-kube-system
- id: rbac.authorization.k8s.io/v1:ClusterRole:clickhouse-operator-kube-system
  type: Kubernetes
  attributes:
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        clickhouse.altinity.com/chop: 0.19.2
      name: clickhouse-operator-kube-system
    rules:
    - apiGroups:
      - ""
      resources:
      - configmaps
      - services
      verbs:
      - get
      - list
      - patch
      - update
      - watch
      - create
      - delete
    - apiGroups:
      - ""
      resources:
      - endpoints
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      - events
      verbs:
      - create
    - apiGroups:
      - ""
      resources:
      - persistentvolumeclaims
      verbs:
      - get
      - list
      - patch
      - update
      - watch
      - delete
    - apiGroups:
      - ""
      resources:
      - persistentvolumes
      - pods
      verbs:
      - get
      - list
      - patch
      - update
      - watch
    - apiGroups:
      - apps
      resources:
      - statefulsets
      verbs:
      - get
      - list
      - patch
      - update
      - watch
      - create
      - delete
    - apiGroups:
      - apps
      resources:
      - replicasets
      verbs:
      - get
      - patch
      - update
      - delete
    - apiGroups:
      - apps
      resourceNames:
      - clickhouse-operator
      resources:
      - deployments
      verbs:
      - get
      - patch
      - update
      - delete
    - apiGroups:
      - policy
      resources:
      - poddisruptionbudgets
      verbs:
      - get
      - list
      - patch
      - update
      - watch
      - create
      - delete
    - apiGroups:
      - clickhouse.altinity.com
      resources:
      - clickhouseinstallations
      verbs:
      - get
      - patch
      - update
      - delete
    - apiGroups:
      - clickhouse.altinity.com
      resources:
      - clickhouseinstallations
      - clickhouseinstallationtemplates
      - clickhouseoperatorconfigurations
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - clickhouse.altinity.com
      resources:
      - clickhouseinstallations/finalizers
      - clickhouseinstallationtemplates/finalizers
      - clickhouseoperatorconfigurations/finalizers
      verbs:
      - update
    - apiGroups:
      - clickhouse.altinity.com
      resources:
      - clickhouseinstallations/status
      - clickhouseinstallationtemplates/status
      - clickhouseoperatorconfigurations/status
      verbs:
      - get
      - update
      - patch
      - create
      - delete
    - apiGroups:
      - ""
      resources:
      - secrets
      verbs:
      - get
      - list
    - apiGroups:
      - apiextensions.k8s.io
      resources:
      - customresourcedefinitions
      verbs:
      - get
      - list
- id: apiextensions.k8s.io/v1:CustomResourceDefinition:clickhouseinstallations.clickhouse.altinity.com
  type: Kubernetes
  attributes:
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      labels:
        clickhouse.altinity.com/chop: 0.19.2
      name: clickhouseinstallations.clickhouse.altinity.com
    spec:
      group: clickhouse.altinity.com
      names:
        kind: ClickHouseInstallation
        plural: clickhouseinstallations
        shortNames:
        - chi
        singular: clickhouseinstallation
      scope: Namespaced
      versions:
      - additionalPrinterColumns:
        - description: Operator version
          jsonPath: .status.chop-version
          name: version
          priority: 1
          type: string
        - description: Clusters count
          jsonPath: .status.clusters
          name: clusters
          priority: 0
          type: integer
        - description: Shards count
          jsonPath: .status.shards
          name: shards
          priority: 1
          type: integer
        - description: Hosts count
          jsonPath: .status.hosts
          name: hosts
          priority: 0
          type: integer
        - description: TaskID
          jsonPath: .status.taskID
          name: taskID
          priority: 1
          type: string
        - description: CHI status
          jsonPath: .status.status
          name: status
          priority: 0
          type: string
        - description: Updated hosts count
          jsonPath: .status.updated
          name: updated
          priority: 1
          type: integer
        - description: Added hosts count
          jsonPath: .status.added
          name: added
          priority: 1
          type: integer
        - description: Hosts deleted count
          jsonPath: .status.deleted
          name: deleted
          priority: 1
          type: integer
        - description: Hosts to be deleted count
          jsonPath: .status.delete
          name: delete
          priority: 1
          type: integer
        - description: Client access endpoint
          jsonPath: .status.endpoint
          name: endpoint
          priority: 1
          type: string
        - description: Age of the resource
          jsonPath: .metadata.creationTimestamp
          name: age
          type: date
        name: v1
        schema:
          openAPIV3Schema:
            description: define a set of Kubernetes resources (StatefulSet, PVC, Service,
              ConfigMap) which describe behavior one or more ClickHouse clusters
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource
                  this object represents. Servers may infer this from the endpoint
                  the client submits requests to. Cannot be updated. In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: |
                  Specification of the desired behavior of one or more ClickHouse clusters
                  More info: https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md"
                properties:
                  configuration:
                    description: allows configure multiple aspects and behavior for
                      `clickhouse-server` instance and also allows describe multiple
                      `clickhouse-server` clusters inside one `chi` resource
                    properties:
                      clusters:
                        description: |
                          describes ClickHouse clusters layout and allows change settings on cluster-level, shard-level and replica-level
                          every cluster is a set of StatefulSet, one StatefulSet contains only one Pod with `clickhouse-server`
                          all Pods will rendered in <remote_server> part of ClickHouse configs, mounted from ConfigMap as `/etc/clickhouse-server/config.d/chop-generated-remote_servers.xml`
                          Clusters will use for Distributed table engine, more details: https://clickhouse.tech/docs/en/engines/table-engines/special/distributed/
                          If `cluster` contains zookeeper settings (could be inherited from top `chi` level), when you can create *ReplicatedMergeTree tables
                        items:
                          properties:
                            files:
                              description: |
                                optional, allows define content of any setting file inside each `Pod` on current cluster during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
                                override top-level `chi.spec.configuration.files`
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            layout:
                              description: |
                                describe current cluster layout, how much shards in cluster, how much replica in shard
                                allows override settings on each shard and replica separatelly
                              properties:
                                replicas:
                                  description: optional, allows override top-level
                                    `chi.spec.configuration` and cluster-level `chi.spec.configuration.clusters`
                                    configuration for each replica and each shard
                                    relates to selected replica, use it only if you
                                    fully understand what you do
                                  items:
                                    properties:
                                      files:
                                        description: |
                                          optional, allows define content of any setting file inside each `Pod` only in one replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
                                          override top-level `chi.spec.configuration.files` and cluster-level `chi.spec.configuration.clusters.files`, will ignore if `chi.spec.configuration.clusters.layout.shards` presents
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      name:
                                        description: optional, by default replica
                                          name is generated, but you can override
                                          it and setup custom name
                                        maxLength: 15
                                        minLength: 1
                                        pattern: ^[a-zA-Z0-9-]{0,15}$
                                        type: string
                                      settings:
                                        description: |
                                          optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in `Pod` only in one replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/conf.d/`
                                          override top-level `chi.spec.configuration.settings`, cluster-level `chi.spec.configuration.clusters.settings` and will ignore if shard-level `chi.spec.configuration.clusters.layout.shards` present
                                          More details: https://clickhouse.tech/docs/en/operations/settings/settings/
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      shards:
                                        description: optional, list of shards related
                                          to current replica, will ignore if `chi.spec.configuration.clusters.layout.shards`
                                          presents
                                        items:
                                          properties:
                                            files:
                                              description: |
                                                optional, allows define content of any setting file inside each `Pod` only in one shard related to current replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
                                                override top-level `chi.spec.configuration.files` and cluster-level `chi.spec.configuration.clusters.files`, will ignore if `chi.spec.configuration.clusters.layout.shards` presents
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            httpPort:
                                              description: |
                                                optional, setup `Pod.spec.containers.ports` with name `http` for selected shard, override `chi.spec.templates.hostTemplates.spec.httpPort`
                                                allows connect to `clickhouse-server` via HTTP protocol via kubernetes `Service`
                                              maximum: 65535
                                              minimum: 1
                                              type: integer
                                            interserverHTTPPort:
                                              description: |
                                                optional, setup `Pod.spec.containers.ports` with name `interserver` for selected shard, override `chi.spec.templates.hostTemplates.spec.interserverHTTPPort`
                                                allows connect between replicas inside same shard during fetch replicated data parts HTTP protocol
                                              maximum: 65535
                                              minimum: 1
                                              type: integer
                                            name:
                                              description: optional, by default shard
                                                name is generated, but you can override
                                                it and setup custom name
                                              maxLength: 15
                                              minLength: 1
                                              pattern: ^[a-zA-Z0-9-]{0,15}$
                                              type: string
                                            settings:
                                              description: |
                                                optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in `Pod` only in one shard related to current replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/conf.d/`
                                                override top-level `chi.spec.configuration.settings`, cluster-level `chi.spec.configuration.clusters.settings` and replica-level `chi.spec.configuration.clusters.layout.replicas.settings`
                                                More details: https://clickhouse.tech/docs/en/operations/settings/settings/
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            tcpPort:
                                              description: |
                                                optional, setup `Pod.spec.containers.ports` with name `tcp` for selected shard, override `chi.spec.templates.hostTemplates.spec.tcpPort`
                                                allows connect to `clickhouse-server` via TCP Native protocol via kubernetes `Service`
                                              maximum: 65535
                                              minimum: 1
                                              type: integer
                                            templates:
                                              description: |
                                                optional, configuration of the templates names which will use for generate Kubernetes resources according to selected replica
                                                override top-level `chi.spec.configuration.templates`, cluster-level `chi.spec.configuration.clusters.templates`, replica-level `chi.spec.configuration.clusters.layout.replicas.templates`
                                              properties:
                                                clusterServiceTemplate:
                                                  description: optional, fully ignores
                                                    for shard-level
                                                  type: string
                                                dataVolumeClaimTemplate:
                                                  description: optional, template
                                                    name from chi.spec.templates.volumeClaimTemplates,
                                                    allows customization each `PVC`
                                                    which will mount for clickhouse
                                                    data directory in each `Pod` during
                                                    render and reconcile every StatefulSet.spec
                                                    resource described in `chi.spec.configuration.clusters`
                                                    only for one shard
                                                  type: string
                                                hostTemplate:
                                                  description: optional, template
                                                    name from chi.spec.templates.hostTemplates,
                                                    which will apply to configure
                                                    each `clickhouse-server` instance
                                                    during render ConfigMap resources
                                                    which will mount into `Pod` only
                                                    for one shard
                                                  type: string
                                                logVolumeClaimTemplate:
                                                  description: optional, template
                                                    name from chi.spec.templates.volumeClaimTemplates,
                                                    allows customization each `PVC`
                                                    which will mount for clickhouse
                                                    log directory in each `Pod` during
                                                    render and reconcile every StatefulSet.spec
                                                    resource described in `chi.spec.configuration.clusters`
                                                    only for one shard
                                                  type: string
                                                podTemplate:
                                                  description: optional, template
                                                    name from chi.spec.templates.podTemplates,
                                                    allows customization each `Pod`
                                                    resource during render and reconcile
                                                    each StatefulSet.spec resource
                                                    described in `chi.spec.configuration.clusters`
                                                    only for one shard
                                                  type: string
                                                replicaServiceTemplate:
                                                  description: optional, template
                                                    name from chi.spec.templates.serviceTemplates,
                                                    allows customization for each
                                                    `Service` resource which will
                                                    created by `clickhouse-operator`
                                                    which cover each replica inside
                                                    each shard inside clickhouse cluster
                                                    described in `chi.spec.configuration.clusters`
                                                    only for one shard
                                                  type: string
                                                serviceTemplate:
                                                  description: optional, fully ignores
                                                    for shard-level
                                                  type: string
                                                shardServiceTemplate:
                                                  description: optional, template
                                                    name from chi.spec.templates.serviceTemplates,
                                                    allows customization for each
                                                    `Service` resource which will
                                                    created by `clickhouse-operator`
                                                    which cover shard inside clickhouse
                                                    cluster described in `chi.spec.configuration.clusters`
                                                    only for one shard
                                                  type: string
                                                volumeClaimTemplate:
                                                  description: DEPRECATED! VolumeClaimTemplate
                                                    is deprecated in favor of DataVolumeClaimTemplate
                                                    and LogVolumeClaimTemplate
                                                  type: string
                                              type: object
                                          type: object
                                        type: array
                                      shardsCount:
                                        description: optional, count of shards related
                                          to current replica, you can override each
                                          shard behavior on low-level `chi.spec.configuration.clusters.layout.replicas.shards`
                                        minimum: 1
                                        type: integer
                                      templates:
                                        description: |
                                          optional, configuration of the templates names which will use for generate Kubernetes resources according to selected replica
                                          override top-level `chi.spec.configuration.templates`, cluster-level `chi.spec.configuration.clusters.templates`
                                        properties:
                                          clusterServiceTemplate:
                                            description: optional, fully ignores for
                                              replica-level
                                            type: string
                                          dataVolumeClaimTemplate:
                                            description: optional, template name from
                                              chi.spec.templates.volumeClaimTemplates,
                                              allows customization each `PVC` which
                                              will mount for clickhouse data directory
                                              in each `Pod` during render and reconcile
                                              every StatefulSet.spec resource described
                                              in `chi.spec.configuration.clusters`
                                              only for one shard
                                            type: string
                                          hostTemplate:
                                            description: optional, template name from
                                              chi.spec.templates.hostTemplates, which
                                              will apply to configure `clickhouse-server`
                                              instance during render ConfigMap resources
                                              which will mount into `Pod` only for
                                              one replica
                                            type: string
                                          logVolumeClaimTemplate:
                                            description: optional, template name from
                                              chi.spec.templates.volumeClaimTemplates,
                                              allows customization each `PVC` which
                                              will mount for clickhouse log directory
                                              in each `Pod` during render and reconcile
                                              every StatefulSet.spec resource described
                                              in `chi.spec.configuration.clusters`
                                              only for one shard
                                            type: string
                                          podTemplate:
                                            description: optional, template name from
                                              chi.spec.templates.podTemplates, allows
                                              customization each `Pod` resource during
                                              render and reconcile each StatefulSet.spec
                                              resource described in `chi.spec.configuration.clusters`
                                              only for one replica
                                            type: string
                                          replicaServiceTemplate:
                                            description: optional, template name from
                                              chi.spec.templates.serviceTemplates,
                                              allows customization for each `Service`
                                              resource which will created by `clickhouse-operator`
                                              which cover each replica inside each
                                              shard inside clickhouse cluster described
                                              in `chi.spec.configuration.clusters`
                                              only for one replica
                                            type: string
                                          serviceTemplate:
                                            description: optional, fully ignores for
                                              replica-level
                                            type: string
                                          shardServiceTemplate:
                                            description: optional, fully ignores for
                                              replica-level
                                            type: string
                                          volumeClaimTemplate:
                                            description: DEPRECATED! VolumeClaimTemplate
                                              is deprecated in favor of DataVolumeClaimTemplate
                                              and LogVolumeClaimTemplate
                                            type: string
                                        type: object
                                    type: object
                                  type: array
                                replicasCount:
                                  description: how much replicas in each shards for
                                    current ClickHouse cluster will run in Kubernetes,
                                    each replica is a separate `StatefulSet` which
                                    contains only one `Pod` with `clickhouse-server`
                                    instance, every shard contains 1 replica by default
                                  type: integer
                                shards:
                                  description: optional, allows override top-level
                                    `chi.spec.configuration`, cluster-level `chi.spec.configuration.clusters`
                                    settings for each shard separately, use it only
                                    if you fully understand what you do
                                  items:
                                    properties:
                                      definitionType:
                                        description: DEPRECATED - to be removed soon
                                        type: string
                                      files:
                                        description: |
                                          optional, allows define content of any setting file inside each `Pod` only in one shard during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
                                          override top-level `chi.spec.configuration.files` and cluster-level `chi.spec.configuration.clusters.files`
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      internalReplication:
                                        description: |
                                          optional, `true` by default when `chi.spec.configuration.clusters[].layout.ReplicaCount` > 1 and 0 otherwise
                                          allows setup <internal_replication> setting which will use during insert into tables with `Distributed` engine for insert only in one live replica and other replicas will download inserted data during replication,
                                          will apply in <remote_servers> inside ConfigMap which will mount in /etc/clickhouse-server/config.d/chop-generated-remote_servers.xml
                                          More details: https://clickhouse.tech/docs/en/engines/table-engines/special/distributed/
                                        enum:
                                        - ""
                                        - "0"
                                        - "1"
                                        - "False"
                                        - "false"
                                        - "True"
                                        - "true"
                                        - "No"
                                        - "no"
                                        - "Yes"
                                        - "yes"
                                        - "Off"
                                        - "off"
                                        - "On"
                                        - "on"
                                        - Disable
                                        - disable
                                        - Enable
                                        - enable
                                        - Disabled
                                        - disabled
                                        - Enabled
                                        - enabled
                                        type: string
                                      name:
                                        description: optional, by default shard name
                                          is generated, but you can override it and
                                          setup custom name
                                        maxLength: 15
                                        minLength: 1
                                        pattern: ^[a-zA-Z0-9-]{0,15}$
                                        type: string
                                      replicas:
                                        description: |
                                          optional, allows override behavior for selected replicas from cluster-level `chi.spec.configuration.clusters` and shard-level `chi.spec.configuration.clusters.layout.shards`
                                        items:
                                          properties:
                                            files:
                                              description: |
                                                optional, allows define content of any setting file inside `Pod` only in one replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
                                                override top-level `chi.spec.configuration.files`, cluster-level `chi.spec.configuration.clusters.files` and shard-level `chi.spec.configuration.clusters.layout.shards.files`
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            httpPort:
                                              description: |
                                                optional, setup `Pod.spec.containers.ports` with name `http` for selected replica, override `chi.spec.templates.hostTemplates.spec.httpPort`
                                                allows connect to `clickhouse-server` via HTTP protocol via kubernetes `Service`
                                              maximum: 65535
                                              minimum: 1
                                              type: integer
                                            interserverHTTPPort:
                                              description: |
                                                optional, setup `Pod.spec.containers.ports` with name `interserver` for selected replica, override `chi.spec.templates.hostTemplates.spec.interserverHTTPPort`
                                                allows connect between replicas inside same shard during fetch replicated data parts HTTP protocol
                                              maximum: 65535
                                              minimum: 1
                                              type: integer
                                            name:
                                              description: optional, by default replica
                                                name is generated, but you can override
                                                it and setup custom name
                                              maxLength: 15
                                              minLength: 1
                                              pattern: ^[a-zA-Z0-9-]{0,15}$
                                              type: string
                                            settings:
                                              description: |
                                                optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in `Pod` only in one replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/conf.d/`
                                                override top-level `chi.spec.configuration.settings`, cluster-level `chi.spec.configuration.clusters.settings` and shard-level `chi.spec.configuration.clusters.layout.shards.settings`
                                                More details: https://clickhouse.tech/docs/en/operations/settings/settings/
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            tcpPort:
                                              description: |
                                                optional, setup `Pod.spec.containers.ports` with name `tcp` for selected replica, override `chi.spec.templates.hostTemplates.spec.tcpPort`
                                                allows connect to `clickhouse-server` via TCP Native protocol via kubernetes `Service`
                                              maximum: 65535
                                              minimum: 1
                                              type: integer
                                            templates:
                                              description: |
                                                optional, configuration of the templates names which will use for generate Kubernetes resources according to selected replica
                                                override top-level `chi.spec.configuration.templates`, cluster-level `chi.spec.configuration.clusters.templates` and shard-level `chi.spec.configuration.clusters.layout.shards.templates`
                                              properties:
                                                clusterServiceTemplate:
                                                  description: optional, fully ignores
                                                    for replica-level
                                                  type: string
                                                dataVolumeClaimTemplate:
                                                  description: optional, template
                                                    name from chi.spec.templates.volumeClaimTemplates,
                                                    allows customization each `PVC`
                                                    which will mount for clickhouse
                                                    data directory in each `Pod` during
                                                    render and reconcile every StatefulSet.spec
                                                    resource described in `chi.spec.configuration.clusters`
                                                    only for one shard
                                                  type: string
                                                hostTemplate:
                                                  description: optional, template
                                                    name from chi.spec.templates.hostTemplates,
                                                    which will apply to configure
                                                    `clickhouse-server` instance during
                                                    render ConfigMap resources which
                                                    will mount into `Pod` only for
                                                    one replica
                                                  type: string
                                                logVolumeClaimTemplate:
                                                  description: optional, template
                                                    name from chi.spec.templates.volumeClaimTemplates,
                                                    allows customization each `PVC`
                                                    which will mount for clickhouse
                                                    log directory in each `Pod` during
                                                    render and reconcile every StatefulSet.spec
                                                    resource described in `chi.spec.configuration.clusters`
                                                    only for one shard
                                                  type: string
                                                podTemplate:
                                                  description: optional, template
                                                    name from chi.spec.templates.podTemplates,
                                                    allows customization each `Pod`
                                                    resource during render and reconcile
                                                    each StatefulSet.spec resource
                                                    described in `chi.spec.configuration.clusters`
                                                    only for one replica
                                                  type: string
                                                replicaServiceTemplate:
                                                  description: optional, template
                                                    name from chi.spec.templates.serviceTemplates,
                                                    allows customization for each
                                                    `Service` resource which will
                                                    created by `clickhouse-operator`
                                                    which cover each replica inside
                                                    each shard inside clickhouse cluster
                                                    described in `chi.spec.configuration.clusters`
                                                    only for one replica
                                                  type: string
                                                serviceTemplate:
                                                  description: optional, fully ignores
                                                    for replica-level
                                                  type: string
                                                shardServiceTemplate:
                                                  description: optional, fully ignores
                                                    for replica-level
                                                  type: string
                                                volumeClaimTemplate:
                                                  description: DEPRECATED! VolumeClaimTemplate
                                                    is deprecated in favor of DataVolumeClaimTemplate
                                                    and LogVolumeClaimTemplate
                                                  type: string
                                              type: object
                                          type: object
                                        type: array
                                      replicasCount:
                                        description: |
                                          optional, how much replicas in selected shard for selected ClickHouse cluster will run in Kubernetes, each replica is a separate `StatefulSet` which contains only one `Pod` with `clickhouse-server` instance,
                                          shard contains 1 replica by default
                                          override cluster-level `chi.spec.configuration.clusters.layout.replicasCount`
                                        minimum: 1
                                        type: integer
                                      settings:
                                        description: |
                                          optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in each `Pod` only in one shard during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/`
                                          override top-level `chi.spec.configuration.settings` and cluster-level `chi.spec.configuration.clusters.settings`
                                          More details: https://clickhouse.tech/docs/en/operations/settings/settings/
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      templates:
                                        description: |
                                          optional, configuration of the templates names which will use for generate Kubernetes resources according to selected shard
                                          override top-level `chi.spec.configuration.templates` and cluster-level `chi.spec.configuration.clusters.templates`
                                        properties:
                                          clusterServiceTemplate:
                                            description: optional, fully ignores for
                                              shard-level
                                            type: string
                                          dataVolumeClaimTemplate:
                                            description: optional, template name from
                                              chi.spec.templates.volumeClaimTemplates,
                                              allows customization each `PVC` which
                                              will mount for clickhouse data directory
                                              in each `Pod` during render and reconcile
                                              every StatefulSet.spec resource described
                                              in `chi.spec.configuration.clusters`
                                              only for one shard
                                            type: string
                                          hostTemplate:
                                            description: optional, template name from
                                              chi.spec.templates.hostTemplates, which
                                              will apply to configure each `clickhouse-server`
                                              instance during render ConfigMap resources
                                              which will mount into `Pod` only for
                                              one shard
                                            type: string
                                          logVolumeClaimTemplate:
                                            description: optional, template name from
                                              chi.spec.templates.volumeClaimTemplates,
                                              allows customization each `PVC` which
                                              will mount for clickhouse log directory
                                              in each `Pod` during render and reconcile
                                              every StatefulSet.spec resource described
                                              in `chi.spec.configuration.clusters`
                                              only for one shard
                                            type: string
                                          podTemplate:
                                            description: optional, template name from
                                              chi.spec.templates.podTemplates, allows
                                              customization each `Pod` resource during
                                              render and reconcile each StatefulSet.spec
                                              resource described in `chi.spec.configuration.clusters`
                                              only for one shard
                                            type: string
                                          replicaServiceTemplate:
                                            description: optional, template name from
                                              chi.spec.templates.serviceTemplates,
                                              allows customization for each `Service`
                                              resource which will created by `clickhouse-operator`
                                              which cover each replica inside each
                                              shard inside clickhouse cluster described
                                              in `chi.spec.configuration.clusters`
                                              only for one shard
                                            type: string
                                          serviceTemplate:
                                            description: optional, fully ignores for
                                              shard-level
                                            type: string
                                          shardServiceTemplate:
                                            description: optional, template name from
                                              chi.spec.templates.serviceTemplates,
                                              allows customization for each `Service`
                                              resource which will created by `clickhouse-operator`
                                              which cover shard inside clickhouse
                                              cluster described in `chi.spec.configuration.clusters`
                                              only for one shard
                                            type: string
                                          volumeClaimTemplate:
                                            description: DEPRECATED! VolumeClaimTemplate
                                              is deprecated in favor of DataVolumeClaimTemplate
                                              and LogVolumeClaimTemplate
                                            type: string
                                        type: object
                                      weight:
                                        description: |
                                          optional, 1 by default, allows setup shard <weight> setting which will use during insert into tables with `Distributed` engine,
                                          will apply in <remote_servers> inside ConfigMap which will mount in /etc/clickhouse-server/config.d/chop-generated-remote_servers.xml
                                          More details: https://clickhouse.tech/docs/en/engines/table-engines/special/distributed/
                                        type: integer
                                    type: object
                                  type: array
                                shardsCount:
                                  description: how much shards for current ClickHouse
                                    cluster will run in Kubernetes, each shard contains
                                    shared-nothing part of data and contains set of
                                    replicas, cluster contains 1 shard by default
                                  type: integer
                                type:
                                  description: DEPRECATED - to be removed soon
                                  type: string
                              type: object
                            name:
                              description: cluster name, used to identify set of ClickHouse
                                servers and wide used during generate names of related
                                Kubernetes resources
                              maxLength: 15
                              minLength: 1
                              pattern: ^[a-zA-Z0-9-]{0,15}$
                              type: string
                            schemaPolicy:
                              description: |
                                describes how schema is propagated within replicas and shards
                              properties:
                                replica:
                                  description: how schema is propagated within a replica
                                  enum:
                                  - None
                                  - All
                                  type: string
                                shard:
                                  description: how schema is propagated between shards
                                  enum:
                                  - None
                                  - All
                                  - DistributedTablesOnly
                                  type: string
                              type: object
                            settings:
                              description: |
                                optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in each `Pod` only in one cluster during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/`
                                override top-level `chi.spec.configuration.settings`
                                More details: https://clickhouse.tech/docs/en/operations/settings/settings/
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            templates:
                              description: |
                                optional, configuration of the templates names which will use for generate Kubernetes resources according to selected cluster
                                override top-level `chi.spec.configuration.templates`
                              properties:
                                clusterServiceTemplate:
                                  description: optional, template name from chi.spec.templates.serviceTemplates,
                                    allows customization for each `Service` resource
                                    which will created by `clickhouse-operator` which
                                    cover each clickhouse cluster described in `chi.spec.configuration.clusters`
                                    only for one cluster
                                  type: string
                                dataVolumeClaimTemplate:
                                  description: optional, template name from chi.spec.templates.volumeClaimTemplates,
                                    allows customization each `PVC` which will mount
                                    for clickhouse data directory in each `Pod` during
                                    render and reconcile every StatefulSet.spec resource
                                    described in `chi.spec.configuration.clusters`
                                    only for one cluster
                                  type: string
                                hostTemplate:
                                  description: optional, template name from chi.spec.templates.hostTemplates,
                                    which will apply to configure each `clickhouse-server`
                                    instance during render ConfigMap resources which
                                    will mount into `Pod` only for one cluster
                                  type: string
                                logVolumeClaimTemplate:
                                  description: optional, template name from chi.spec.templates.volumeClaimTemplates,
                                    allows customization each `PVC` which will mount
                                    for clickhouse log directory in each `Pod` during
                                    render and reconcile every StatefulSet.spec resource
                                    described in `chi.spec.configuration.clusters`
                                    only for one cluster
                                  type: string
                                podTemplate:
                                  description: optional, template name from chi.spec.templates.podTemplates,
                                    allows customization each `Pod` resource during
                                    render and reconcile each StatefulSet.spec resource
                                    described in `chi.spec.configuration.clusters`
                                    only for one cluster
                                  type: string
                                replicaServiceTemplate:
                                  description: optional, template name from chi.spec.templates.serviceTemplates,
                                    allows customization for each `Service` resource
                                    which will created by `clickhouse-operator` which
                                    cover each replica inside each shard inside each
                                    clickhouse cluster described in `chi.spec.configuration.clusters`
                                    only for one cluster
                                  type: string
                                serviceTemplate:
                                  description: optional, fully ignores for cluster-level
                                  type: string
                                shardServiceTemplate:
                                  description: optional, template name from chi.spec.templates.serviceTemplates,
                                    allows customization for each `Service` resource
                                    which will created by `clickhouse-operator` which
                                    cover each shard inside clickhouse cluster described
                                    in `chi.spec.configuration.clusters` only for
                                    one cluster
                                  type: string
                                volumeClaimTemplate:
                                  description: DEPRECATED! VolumeClaimTemplate is
                                    deprecated in favor of DataVolumeClaimTemplate
                                    and LogVolumeClaimTemplate
                                  type: string
                              type: object
                            zookeeper:
                              description: |
                                optional, allows configure <yandex><zookeeper>..</zookeeper></yandex> section in each `Pod` only in current ClickHouse cluster, during generate `ConfigMap` which will mounted in `/etc/clickhouse-server/config.d/`
                                override top-level `chi.spec.configuration.zookeeper` settings
                              properties:
                                identity:
                                  description: optional access credentials string
                                    with `user:password` format used when use digest
                                    authorization in Zookeeper
                                  type: string
                                nodes:
                                  description: describe every available zookeeper
                                    cluster node for interaction
                                  items:
                                    properties:
                                      host:
                                        description: dns name or ip address for Zookeeper
                                          node
                                        type: string
                                      port:
                                        description: TCP port which used to connect
                                          to Zookeeper node
                                        maximum: 65535
                                        minimum: 0
                                        type: integer
                                    type: object
                                  type: array
                                operation_timeout_ms:
                                  description: one operation timeout during Zookeeper
                                    transactions
                                  type: integer
                                root:
                                  description: optional root znode path inside zookeeper
                                    to store ClickHouse related data (replication
                                    queue or distributed DDL)
                                  type: string
                                session_timeout_ms:
                                  description: session timeout during connect to Zookeeper
                                  type: integer
                              type: object
                          type: object
                        type: array
                      files:
                        description: |
                          allows define content of any setting file inside each `Pod` during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
                          every key in this object is the file name
                          every value in this object is the file content
                          you can use `!!binary |` and base64 for binary files, see details here https://yaml.org/type/binary.html
                          each key could contains prefix like USERS, COMMON, HOST or config.d, users.d, cond.d, wrong prefixes will ignored, subfolders also will ignored
                          More details: https://github.com/Altinity/clickhouse-operator/blob/master/docs/chi-examples/05-settings-05-files-nested.yaml
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      profiles:
                        description: |
                          allows configure <yandex><profiles>..</profiles></yandex> section in each `Pod` during generate `ConfigMap` which will mount in `/etc/clickhouse-server/users.d/`
                          you can configure any aspect of settings profile
                          More details: https://clickhouse.tech/docs/en/operations/settings/settings-profiles/
                          Your yaml code will convert to XML, see examples https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#specconfigurationprofiles
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      quotas:
                        description: |
                          allows configure <yandex><quotas>..</quotas></yandex> section in each `Pod` during generate `ConfigMap` which will mount in `/etc/clickhouse-server/users.d/`
                          you can configure any aspect of resource quotas
                          More details: https://clickhouse.tech/docs/en/operations/quotas/
                          Your yaml code will convert to XML, see examples https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#specconfigurationquotas
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      settings:
                        description: |
                          allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in each `Pod` during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/`
                          More details: https://clickhouse.tech/docs/en/operations/settings/settings/
                          Your yaml code will convert to XML, see examples https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#specconfigurationsettings
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      users:
                        description: |
                          allows configure <yandex><users>..</users></yandex> section in each `Pod` during generate `ConfigMap` which will mount in `/etc/clickhouse-server/users.d/`
                          you can configure password hashed, authorization restrictions, database level security row filters etc.
                          More details: https://clickhouse.tech/docs/en/operations/settings/settings-users/
                          Your yaml code will convert to XML, see examples https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#specconfigurationusers
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      zookeeper:
                        description: |
                          allows configure <yandex><zookeeper>..</zookeeper></yandex> section in each `Pod` during generate `ConfigMap` which will mounted in `/etc/clickhouse-server/config.d/`
                          `clickhouse-operator` itself doesn't manage Zookeeper, please install Zookeeper separatelly look examples on https://github.com/Altinity/clickhouse-operator/tree/master/deploy/zookeeper/
                          currently, zookeeper (or clickhouse-keeper replacement) used for *ReplicatedMergeTree table engines and for `distributed_ddl`
                          More details: https://clickhouse.tech/docs/en/operations/server-configuration-parameters/settings/#server-settings_zookeeper
                        properties:
                          identity:
                            description: optional access credentials string with `user:password`
                              format used when use digest authorization in Zookeeper
                            type: string
                          nodes:
                            description: describe every available zookeeper cluster
                              node for interaction
                            items:
                              properties:
                                host:
                                  description: dns name or ip address for Zookeeper
                                    node
                                  type: string
                                port:
                                  description: TCP port which used to connect to Zookeeper
                                    node
                                  maximum: 65535
                                  minimum: 0
                                  type: integer
                              type: object
                            type: array
                          operation_timeout_ms:
                            description: one operation timeout during Zookeeper transactions
                            type: integer
                          root:
                            description: optional root znode path inside zookeeper
                              to store ClickHouse related data (replication queue
                              or distributed DDL)
                            type: string
                          session_timeout_ms:
                            description: session timeout during connect to Zookeeper
                            type: integer
                        type: object
                    type: object
                  defaults:
                    description: |
                      define default behavior for whole ClickHouseInstallation, some behavior can be re-define on cluster, shard and replica level
                      More info: https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#specdefaults
                    properties:
                      distributedDDL:
                        description: |
                          allows change `<yandex><distributed_ddl></distributed_ddl></yandex>` settings
                          More info: https://clickhouse.tech/docs/en/operations/server-configuration-parameters/settings/#server-settings-distributed_ddl
                        properties:
                          profile:
                            description: Settings from this profile will be used to
                              execute DDL queries
                            type: string
                        type: object
                      replicasUseFQDN:
                        description: |
                          define should replicas be specified by FQDN in `<host></host>`, then "no" then will use short hostname and clickhouse-server will use kubernetes default suffixes for properly DNS lookup
                          "yes" by default
                        enum:
                        - ""
                        - "0"
                        - "1"
                        - "False"
                        - "false"
                        - "True"
                        - "true"
                        - "No"
                        - "no"
                        - "Yes"
                        - "yes"
                        - "Off"
                        - "off"
                        - "On"
                        - "on"
                        - Disable
                        - disable
                        - Enable
                        - enable
                        - Disabled
                        - disabled
                        - Enabled
                        - enabled
                        type: string
                      templates:
                        description: optional, configuration of the templates names
                          which will use for generate Kubernetes resources according
                          to one or more ClickHouse clusters described in current
                          ClickHouseInstallation (chi) resource
                        properties:
                          clusterServiceTemplate:
                            description: optional, template name from chi.spec.templates.serviceTemplates,
                              allows customization for each `Service` resource which
                              will created by `clickhouse-operator` which cover each
                              clickhouse cluster described in `chi.spec.configuration.clusters`
                            type: string
                          dataVolumeClaimTemplate:
                            description: optional, template name from chi.spec.templates.volumeClaimTemplates,
                              allows customization each `PVC` which will mount for
                              clickhouse data directory in each `Pod` during render
                              and reconcile every StatefulSet.spec resource described
                              in `chi.spec.configuration.clusters`
                            type: string
                          hostTemplate:
                            description: optional, template name from chi.spec.templates.hostTemplates,
                              which will apply to configure every `clickhouse-server`
                              instance during render ConfigMap resources which will
                              mount into `Pod`
                            type: string
                          logVolumeClaimTemplate:
                            description: optional, template name from chi.spec.templates.volumeClaimTemplates,
                              allows customization each `PVC` which will mount for
                              clickhouse log directory in each `Pod` during render
                              and reconcile every StatefulSet.spec resource described
                              in `chi.spec.configuration.clusters`
                            type: string
                          podTemplate:
                            description: optional, template name from chi.spec.templates.podTemplates,
                              allows customization each `Pod` resource during render
                              and reconcile each StatefulSet.spec resource described
                              in `chi.spec.configuration.clusters`
                            type: string
                          replicaServiceTemplate:
                            description: optional, template name from chi.spec.templates.serviceTemplates,
                              allows customization for each `Service` resource which
                              will created by `clickhouse-operator` which cover each
                              replica inside each shard inside each clickhouse cluster
                              described in `chi.spec.configuration.clusters`
                            type: string
                          serviceTemplate:
                            description: optional, template name from chi.spec.templates.serviceTemplates,
                              allows customization for one `Service` resource which
                              will created by `clickhouse-operator` which cover all
                              clusters in whole `chi` resource
                            type: string
                          shardServiceTemplate:
                            description: optional, template name from chi.spec.templates.serviceTemplates,
                              allows customization for each `Service` resource which
                              will created by `clickhouse-operator` which cover each
                              shard inside clickhouse cluster described in `chi.spec.configuration.clusters`
                            type: string
                          volumeClaimTemplate:
                            description: DEPRECATED! VolumeClaimTemplate is deprecated
                              in favor of DataVolumeClaimTemplate and LogVolumeClaimTemplate
                            type: string
                        type: object
                    type: object
                  namespaceDomainPattern:
                    description: custom domain suffix which will add to end of `Service`
                      or `Pod` name, use it when you use custom cluster domain in
                      your Kubernetes cluster
                    type: string
                  reconciling:
                    description: optional, allows tuning reconciling cycle for ClickhouseInstallation
                      from clickhouse-operator side
                    properties:
                      cleanup:
                        description: optional, define behavior for cleanup Kubernetes
                          resources during reconcile cycle
                        properties:
                          reconcileFailedObjects:
                            description: what clickhouse-operator shall do when reconciling
                              Kubernetes resources are failed, default behavior is
                              `Retain`
                            properties:
                              configMap:
                                description: behavior policy for failed ConfigMap
                                  reconciling, Retain by default
                                enum:
                                - Retain
                                - Delete
                                type: string
                              pvc:
                                description: behavior policy for failed PVC reconciling,
                                  Retain by default
                                enum:
                                - Retain
                                - Delete
                                type: string
                              service:
                                description: behavior policy for failed Service reconciling,
                                  Retain by default
                                enum:
                                - Retain
                                - Delete
                                type: string
                              statefulSet:
                                description: behavior policy for failed StatefulSet
                                  reconciling, Retain by default
                                enum:
                                - Retain
                                - Delete
                                type: string
                            type: object
                          unknownObjects:
                            description: what clickhouse-operator shall do when found
                              Kubernetes resources which should be managed with clickhouse-operator,
                              but not have `ownerReference` to any currently managed
                              `ClickHouseInstallation` resource, default behavior
                              is `Delete`
                            properties:
                              configMap:
                                description: behavior policy for unknown ConfigMap,
                                  Delete by default
                                enum:
                                - Retain
                                - Delete
                                type: string
                              pvc:
                                description: behavior policy for unknown PVC, Delete
                                  by default
                                enum:
                                - Retain
                                - Delete
                                type: string
                              service:
                                description: behavior policy for unknown Service,
                                  Delete by default
                                enum:
                                - Retain
                                - Delete
                                type: string
                              statefulSet:
                                description: behavior policy for unknown StatefulSet,
                                  Delete by default
                                enum:
                                - Retain
                                - Delete
                                type: string
                            type: object
                        type: object
                      configMapPropagationTimeout:
                        description: |
                          timeout in seconds when `clickhouse-operator` will wait when applied `ConfigMap` during reconcile `ClickhouseInstallation` pods will updated from cache
                          see details: https://kubernetes.io/docs/concepts/configuration/configmap/#mounted-configmaps-are-updated-automatically
                        maximum: 3600
                        minimum: 0
                        type: integer
                      policy:
                        description: DEPRECATED
                        type: string
                    type: object
                  restart:
                    description: This is a 'soft restart' button. When set to 'RollingUpdate'
                      operator will restart ClickHouse pods in a graceful way. Remove
                      it after the use in order to avoid unneeded restarts
                    enum:
                    - ""
                    - RollingUpdate
                    type: string
                  stop:
                    description: |
                      Allow stop all ClickHouse clusters described in current chi.
                      Stop mechanism works as follows:
                       - When `stop` is `1` then setup `Replicas: 0` in each related to current `chi` StatefulSet resource, all `Pods` and `Service` resources will desctroy, but PVCs still live
                       - When `stop` is `0` then `Pods` will created again and will attach retained PVCs and `Service` also will created again
                    enum:
                    - ""
                    - "0"
                    - "1"
                    - "False"
                    - "false"
                    - "True"
                    - "true"
                    - "No"
                    - "no"
                    - "Yes"
                    - "yes"
                    - "Off"
                    - "off"
                    - "On"
                    - "on"
                    - Disable
                    - disable
                    - Enable
                    - enable
                    - Disabled
                    - disabled
                    - Enabled
                    - enabled
                    type: string
                  taskID:
                    description: Allow define custom taskID for named update and watch
                      status of this update execution in .status.taskIDs field, by
                      default every update of chi manifest will generate random taskID
                    type: string
                  templates:
                    description: allows define templates which will use for render
                      Kubernetes resources like StatefulSet, ConfigMap, Service, PVC,
                      by default, clickhouse-operator have own templates, but you
                      can override it
                    properties:
                      hostTemplates:
                        description: hostTemplate will use during apply to generate
                          `clickhose-server` config files
                        items:
                          properties:
                            name:
                              description: template name, could use to link inside
                                top-level `chi.spec.defaults.templates.hostTemplate`,
                                cluster-level `chi.spec.configuration.clusters.templates.hostTemplate`,
                                shard-level `chi.spec.configuration.clusters.layout.shards.temlates.hostTemplate`,
                                replica-level `chi.spec.configuration.clusters.layout.replicas.templates.hostTemplate`
                              type: string
                            portDistribution:
                              description: define how will distribute numeric values
                                of named ports in `Pod.spec.containers.ports` and
                                clickhouse-server configs
                              items:
                                properties:
                                  type:
                                    description: type of distribution, when `Unspecified`
                                      (default value) then all listen ports on clickhouse-server
                                      configuration in all Pods will have the same
                                      value, when `ClusterScopeIndex` then ports will
                                      increment to offset from base value depends
                                      on shard and replica index inside cluster with
                                      combination of `chi.spec.templates.podTemlates.spec.HostNetwork`
                                      it allows setup ClickHouse cluster inside Kubernetes
                                      and provide access via external network bypass
                                      Kubernetes internal network
                                    enum:
                                    - ""
                                    - Unspecified
                                    - ClusterScopeIndex
                                    type: string
                                type: object
                              type: array
                            spec:
                              properties:
                                files:
                                  description: |
                                    optional, allows define content of any setting file inside each `Pod` where this template will apply during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                httpPort:
                                  description: |
                                    optional, setup `http_port` inside `clickhouse-server` settings for each Pod where current template will apply
                                    if specified, should have equal value with `chi.spec.templates.podTemplates.spec.containers.ports[name=http]`
                                    More info: https://clickhouse.tech/docs/en/interfaces/http/
                                  maximum: 65535
                                  minimum: 1
                                  type: integer
                                interserverHTTPPort:
                                  description: |
                                    optional, setup `interserver_http_port` inside `clickhouse-server` settings for each Pod where current template will apply
                                    if specified, should have equal value with `chi.spec.templates.podTemplates.spec.containers.ports[name=interserver]`
                                    More info: https://clickhouse.tech/docs/en/operations/server-configuration-parameters/settings/#interserver-http-port
                                  maximum: 65535
                                  minimum: 1
                                  type: integer
                                name:
                                  description: by default, hostname will generate,
                                    but this allows define custom name for each `clickhuse-server`
                                  maxLength: 15
                                  minLength: 1
                                  pattern: ^[a-zA-Z0-9-]{0,15}$
                                  type: string
                                settings:
                                  description: |
                                    optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in each `Pod` where this template will apply during generate `ConfigMap` which will mount in `/etc/clickhouse-server/conf.d/`
                                    More details: https://clickhouse.tech/docs/en/operations/settings/settings/
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                tcpPort:
                                  description: |
                                    optional, setup `tcp_port` inside `clickhouse-server` settings for each Pod where current template will apply
                                    if specified, should have equal value with `chi.spec.templates.podTemplates.spec.containers.ports[name=tcp]`
                                    More info: https://clickhouse.tech/docs/en/interfaces/tcp/
                                  maximum: 65535
                                  minimum: 1
                                  type: integer
                                templates:
                                  description: be carefull, this part of CRD allows
                                    override template inside template, don't use it
                                    if you don't understand what you do
                                  properties:
                                    clusterServiceTemplate:
                                      type: string
                                    dataVolumeClaimTemplate:
                                      type: string
                                    hostTemplate:
                                      type: string
                                    logVolumeClaimTemplate:
                                      type: string
                                    podTemplate:
                                      type: string
                                    replicaServiceTemplate:
                                      type: string
                                    serviceTemplate:
                                      type: string
                                    shardServiceTemplate:
                                      type: string
                                  type: object
                              type: object
                          type: object
                        type: array
                      podTemplates:
                        description: |
                          podTemplate will use during render `Pod` inside `StatefulSet.spec` and allows define rendered `Pod.spec`, pod scheduling distribution and pod zone
                          More information: https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#spectemplatespodtemplates
                        items:
                          properties:
                            distribution:
                              description: DEPRECATED, shortcut for `chi.spec.templates.podTemplates.spec.affinity.podAntiAffinity`
                              enum:
                              - ""
                              - Unspecified
                              - OnePerHost
                              type: string
                            generateName:
                              description: allows define format for generated `Pod`
                                name, look to https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#spectemplatesservicetemplates
                                for details about aviailable template variables
                              type: string
                            metadata:
                              description: |
                                allows pass standard object's metadata from template to Pod
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            name:
                              description: template name, could use to link inside
                                top-level `chi.spec.defaults.templates.podTemplate`,
                                cluster-level `chi.spec.configuration.clusters.templates.podTemplate`,
                                shard-level `chi.spec.configuration.clusters.layout.shards.temlates.podTemplate`,
                                replica-level `chi.spec.configuration.clusters.layout.replicas.templates.podTemplate`
                              type: string
                            podDistribution:
                              description: define ClickHouse Pod distibution policy
                                between Kubernetes Nodes inside Shard, Replica, Namespace,
                                CHI, another ClickHouse cluster
                              items:
                                properties:
                                  number:
                                    description: define, how much ClickHouse Pods
                                      could be inside selected scope with selected
                                      distribution type
                                    maximum: 65535
                                    minimum: 0
                                    type: integer
                                  scope:
                                    description: scope for apply each podDistribution
                                    enum:
                                    - ""
                                    - Unspecified
                                    - Shard
                                    - Replica
                                    - Cluster
                                    - ClickHouseInstallation
                                    - Namespace
                                    type: string
                                  topologyKey:
                                    description: 'use for inter-pod affinity look
                                      to `pod.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.topologyKey`,
                                      More info: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity'
                                    type: string
                                  type:
                                    description: you can define multiple affinity
                                      policy types
                                    enum:
                                    - ""
                                    - Unspecified
                                    - ClickHouseAntiAffinity
                                    - ShardAntiAffinity
                                    - ReplicaAntiAffinity
                                    - AnotherNamespaceAntiAffinity
                                    - AnotherClickHouseInstallationAntiAffinity
                                    - AnotherClusterAntiAffinity
                                    - MaxNumberPerNode
                                    - NamespaceAffinity
                                    - ClickHouseInstallationAffinity
                                    - ClusterAffinity
                                    - ShardAffinity
                                    - ReplicaAffinity
                                    - PreviousTailAffinity
                                    - CircularReplication
                                    type: string
                                type: object
                              type: array
                            spec:
                              description: allows define whole Pod.spec inside StaefulSet.spec,
                                look to https://kubernetes.io/docs/concepts/workloads/pods/#pod-templates
                                for details
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            zone:
                              description: allows define custom zone name and will
                                separate ClickHouse `Pods` between nodes, shortcut
                                for `chi.spec.templates.podTemplates.spec.affinity.podAntiAffinity`
                              properties:
                                key:
                                  description: optional, if defined, allows select
                                    kubernetes nodes by label with `name` equal `key`
                                  type: string
                                values:
                                  description: optional, if defined, allows select
                                    kubernetes nodes by label with `value` in `values`
                                  items:
                                    type: string
                                  type: array
                              type: object
                          type: object
                        type: array
                      serviceTemplates:
                        description: |
                          allows define template for rendering `Service` which would get endpoint from Pods which scoped chi-wide, cluster-wide, shard-wide, replica-wide level
                        items:
                          properties:
                            generateName:
                              description: allows define format for generated `Service`
                                name, look to https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#spectemplatesservicetemplates
                                for details about aviailable template variables
                              type: string
                            metadata:
                              description: |
                                allows pass standard object's metadata from template to Service
                                Could be use for define specificly for Cloud Provider metadata which impact to behavior of service
                                More info: https://kubernetes.io/docs/concepts/services-networking/service/
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            name:
                              description: |
                                template name, could use to link inside
                                chi-level `chi.spec.defaults.templates.serviceTemplate`
                                cluster-level `chi.spec.configuration.clusters.templates.clusterServiceTemplate`
                                shard-level `chi.spec.configuration.clusters.layout.shards.temlates.shardServiceTemplate`
                                replica-level `chi.spec.configuration.clusters.layout.replicas.templates.replicaServiceTemplate` or `chi.spec.configuration.clusters.layout.shards.replicas.replicaServiceTemplate`
                              type: string
                            spec:
                              description: |
                                describe behavior of generated Service
                                More info: https://kubernetes.io/docs/concepts/services-networking/service/
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                        type: array
                      volumeClaimTemplates:
                        description: allows define template for rendering `PVC` kubernetes
                          resource, which would use inside `Pod` for mount clickhouse
                          `data`, clickhouse `logs` or something else
                        items:
                          properties:
                            metadata:
                              description: |
                                allows pass standard object's metadata from template to PVC
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            name:
                              description: |
                                template name, could use to link inside
                                top-level `chi.spec.defaults.templates.dataVolumeClaimTemplate` or `chi.spec.defaults.templates.logVolumeClaimTemplate`,
                                cluster-level `chi.spec.configuration.clusters.templates.dataVolumeClaimTemplate` or `chi.spec.configuration.clusters.templates.logVolumeClaimTemplate`,
                                shard-level `chi.spec.configuration.clusters.layout.shards.temlates.dataVolumeClaimTemplate` or `chi.spec.configuration.clusters.layout.shards.temlates.logVolumeClaimTemplate`
                                replica-level `chi.spec.configuration.clusters.layout.replicas.templates.dataVolumeClaimTemplate` or `chi.spec.configuration.clusters.layout.replicas.templates.logVolumeClaimTemplate`
                              type: string
                            reclaimPolicy:
                              description: define behavior of `PVC` deletion policy
                                during delete `Pod`, `Delete` by default, when `Retain`
                                then `PVC` still alive even `Pod` will deleted
                              enum:
                              - ""
                              - Retain
                              - Delete
                              type: string
                            spec:
                              description: |
                                allows define all aspects of `PVC` resource
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                        type: array
                    type: object
                  templating:
                    description: optional, define policy for auto applying ClickHouseInstallationTemplate
                      inside ClickHouseInstallation
                    properties:
                      policy:
                        description: when defined as `auto` inside ClickhouseInstallationTemplate,
                          it will auto add into all ClickHouseInstallation, manual
                          value is default
                        enum:
                        - auto
                        - manual
                        type: string
                    type: object
                  troubleshoot:
                    description: allows troubleshoot Pods during CrashLoopBack state,
                      when you apply wrong configuration, `clickhouse-server` wouldn't
                      startup
                    enum:
                    - ""
                    - "0"
                    - "1"
                    - "False"
                    - "false"
                    - "True"
                    - "true"
                    - "No"
                    - "no"
                    - "Yes"
                    - "yes"
                    - "Off"
                    - "off"
                    - "On"
                    - "on"
                    - Disable
                    - disable
                    - Enable
                    - enable
                    - Disabled
                    - disabled
                    - Enabled
                    - enabled
                    type: string
                  useTemplates:
                    description: list of `ClickHouseInstallationTemplate` (chit) resource
                      names which will merge with current `Chi` manifest during render
                      Kubernetes resources to create related ClickHouse clusters
                    items:
                      properties:
                        name:
                          description: name of `ClickHouseInstallationTemplate` (chit)
                            resource
                          type: string
                        namespace:
                          description: Kubernetes namespace where need search `chit`
                            resource, depending on `watchNamespaces` settings in `clichouse-operator`
                          type: string
                        useType:
                          description: optional, current strategy is only merge, and
                            current `chi` settings have more priority than merged
                            template `chit`
                          enum:
                          - ""
                          - merge
                          type: string
                      type: object
                    type: array
                type: object
              status:
                description: Current ClickHouseInstallation manifest status, contains
                  many fields like a normalized configuration, clickhouse-operator
                  version, current action and all applied action list, current taskID
                  and all applied taskIDs and other
                properties:
                  action:
                    description: Action
                    type: string
                  actions:
                    description: Actions
                    items:
                      type: string
                    type: array
                  added:
                    description: Added Hosts count
                    minimum: 0
                    type: integer
                  chop-commit:
                    description: ClickHouse operator git commit SHA
                    type: string
                  chop-date:
                    description: ClickHouse operator build date
                    type: string
                  chop-ip:
                    description: IP address of the operator's pod which managed this
                      CHI
                    type: string
                  chop-version:
                    description: ClickHouse operator version
                    type: string
                  clusters:
                    description: Clusters count
                    minimum: 0
                    type: integer
                  delete:
                    description: About to delete Hosts count
                    minimum: 0
                    type: integer
                  deleted:
                    description: Deleted Hosts count
                    minimum: 0
                    type: integer
                  endpoint:
                    description: Endpoint
                    type: string
                  error:
                    description: Last error
                    type: string
                  errors:
                    description: Errors
                    items:
                      type: string
                    type: array
                  fqdns:
                    description: Pods FQDNs
                    items:
                      type: string
                    type: array
                  generation:
                    description: Generation
                    minimum: 0
                    type: integer
                  hosts:
                    description: Hosts count
                    minimum: 0
                    type: integer
                  normalized:
                    description: Normalized CHI
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  pod-ips:
                    description: Pod IPs
                    items:
                      type: string
                    type: array
                  pods:
                    description: Pods
                    items:
                      type: string
                    type: array
                  replicas:
                    description: Replicas count
                    minimum: 0
                    type: integer
                  shards:
                    description: Shards count
                    minimum: 0
                    type: integer
                  status:
                    description: Status
                    type: string
                  taskID:
                    description: Current task id
                    type: string
                  taskIDsCompleted:
                    description: Completed task ids
                    items:
                      type: string
                    type: array
                  taskIDsStarted:
                    description: Started task ids
                    items:
                      type: string
                    type: array
                  updated:
                    description: Updated Hosts count
                    minimum: 0
                    type: integer
                type: object
            required:
            - spec
            type: object
        served: true
        storage: true
        subresources:
          status: {}
- id: apiextensions.k8s.io/v1:CustomResourceDefinition:clickhouseinstallationtemplates.clickhouse.altinity.com
  type: Kubernetes
  attributes:
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      labels:
        clickhouse.altinity.com/chop: 0.19.2
      name: clickhouseinstallationtemplates.clickhouse.altinity.com
    spec:
      group: clickhouse.altinity.com
      names:
        kind: ClickHouseInstallationTemplate
        plural: clickhouseinstallationtemplates
        shortNames:
        - chit
        singular: clickhouseinstallationtemplate
      scope: Namespaced
      versions:
      - additionalPrinterColumns:
        - description: Operator version
          jsonPath: .status.chop-version
          name: version
          priority: 1
          type: string
        - description: Clusters count
          jsonPath: .status.clusters
          name: clusters
          priority: 0
          type: integer
        - description: Shards count
          jsonPath: .status.shards
          name: shards
          priority: 1
          type: integer
        - description: Hosts count
          jsonPath: .status.hosts
          name: hosts
          priority: 0
          type: integer
        - description: TaskID
          jsonPath: .status.taskID
          name: taskID
          priority: 1
          type: string
        - description: CHI status
          jsonPath: .status.status
          name: status
          priority: 0
          type: string
        - description: Updated hosts count
          jsonPath: .status.updated
          name: updated
          priority: 1
          type: integer
        - description: Added hosts count
          jsonPath: .status.added
          name: added
          priority: 1
          type: integer
        - description: Hosts deleted count
          jsonPath: .status.deleted
          name: deleted
          priority: 1
          type: integer
        - description: Hosts to be deleted count
          jsonPath: .status.delete
          name: delete
          priority: 1
          type: integer
        - description: Client access endpoint
          jsonPath: .status.endpoint
          name: endpoint
          priority: 1
          type: string
        - description: Age of the resource
          jsonPath: .metadata.creationTimestamp
          name: age
          type: date
        name: v1
        schema:
          openAPIV3Schema:
            description: define a set of Kubernetes resources (StatefulSet, PVC, Service,
              ConfigMap) which describe behavior one or more ClickHouse clusters
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource
                  this object represents. Servers may infer this from the endpoint
                  the client submits requests to. Cannot be updated. In CamelCase.
                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: |
                  Specification of the desired behavior of one or more ClickHouse clusters
                  More info: https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md"
                properties:
                  configuration:
                    description: allows configure multiple aspects and behavior for
                      `clickhouse-server` instance and also allows describe multiple
                      `clickhouse-server` clusters inside one `chi` resource
                    properties:
                      clusters:
                        description: |
                          describes ClickHouse clusters layout and allows change settings on cluster-level, shard-level and replica-level
                          every cluster is a set of StatefulSet, one StatefulSet contains only one Pod with `clickhouse-server`
                          all Pods will rendered in <remote_server> part of ClickHouse configs, mounted from ConfigMap as `/etc/clickhouse-server/config.d/chop-generated-remote_servers.xml`
                          Clusters will use for Distributed table engine, more details: https://clickhouse.tech/docs/en/engines/table-engines/special/distributed/
                          If `cluster` contains zookeeper settings (could be inherited from top `chi` level), when you can create *ReplicatedMergeTree tables
                        items:
                          properties:
                            files:
                              description: |
                                optional, allows define content of any setting file inside each `Pod` on current cluster during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
                                override top-level `chi.spec.configuration.files`
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            layout:
                              description: |
                                describe current cluster layout, how much shards in cluster, how much replica in shard
                                allows override settings on each shard and replica separatelly
                              properties:
                                replicas:
                                  description: optional, allows override top-level
                                    `chi.spec.configuration` and cluster-level `chi.spec.configuration.clusters`
                                    configuration for each replica and each shard
                                    relates to selected replica, use it only if you
                                    fully understand what you do
                                  items:
                                    properties:
                                      files:
                                        description: |
                                          optional, allows define content of any setting file inside each `Pod` only in one replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
                                          override top-level `chi.spec.configuration.files` and cluster-level `chi.spec.configuration.clusters.files`, will ignore if `chi.spec.configuration.clusters.layout.shards` presents
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      name:
                                        description: optional, by default replica
                                          name is generated, but you can override
                                          it and setup custom name
                                        maxLength: 15
                                        minLength: 1
                                        pattern: ^[a-zA-Z0-9-]{0,15}$
                                        type: string
                                      settings:
                                        description: |
                                          optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in `Pod` only in one replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/conf.d/`
                                          override top-level `chi.spec.configuration.settings`, cluster-level `chi.spec.configuration.clusters.settings` and will ignore if shard-level `chi.spec.configuration.clusters.layout.shards` present
                                          More details: https://clickhouse.tech/docs/en/operations/settings/settings/
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      shards:
                                        description: optional, list of shards related
                                          to current replica, will ignore if `chi.spec.configuration.clusters.layout.shards`
                                          presents
                                        items:
                                          properties:
                                            files:
                                              description: |
                                                optional, allows define content of any setting file inside each `Pod` only in one shard related to current replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
                                                override top-level `chi.spec.configuration.files` and cluster-level `chi.spec.configuration.clusters.files`, will ignore if `chi.spec.configuration.clusters.layout.shards` presents
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            httpPort:
                                              description: |
                                                optional, setup `Pod.spec.containers.ports` with name `http` for selected shard, override `chi.spec.templates.hostTemplates.spec.httpPort`
                                                allows connect to `clickhouse-server` via HTTP protocol via kubernetes `Service`
                                              maximum: 65535
                                              minimum: 1
                                              type: integer
                                            interserverHTTPPort:
                                              description: |
                                                optional, setup `Pod.spec.containers.ports` with name `interserver` for selected shard, override `chi.spec.templates.hostTemplates.spec.interserverHTTPPort`
                                                allows connect between replicas inside same shard during fetch replicated data parts HTTP protocol
                                              maximum: 65535
                                              minimum: 1
                                              type: integer
                                            name:
                                              description: optional, by default shard
                                                name is generated, but you can override
                                                it and setup custom name
                                              maxLength: 15
                                              minLength: 1
                                              pattern: ^[a-zA-Z0-9-]{0,15}$
                                              type: string
                                            settings:
                                              description: |
                                                optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in `Pod` only in one shard related to current replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/conf.d/`
                                                override top-level `chi.spec.configuration.settings`, cluster-level `chi.spec.configuration.clusters.settings` and replica-level `chi.spec.configuration.clusters.layout.replicas.settings`
                                                More details: https://clickhouse.tech/docs/en/operations/settings/settings/
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            tcpPort:
                                              description: |
                                                optional, setup `Pod.spec.containers.ports` with name `tcp` for selected shard, override `chi.spec.templates.hostTemplates.spec.tcpPort`
                                                allows connect to `clickhouse-server` via TCP Native protocol via kubernetes `Service`
                                              maximum: 65535
                                              minimum: 1
                                              type: integer
                                            templates:
                                              description: |
                                                optional, configuration of the templates names which will use for generate Kubernetes resources according to selected replica
                                                override top-level `chi.spec.configuration.templates`, cluster-level `chi.spec.configuration.clusters.templates`, replica-level `chi.spec.configuration.clusters.layout.replicas.templates`
                                              properties:
                                                clusterServiceTemplate:
                                                  description: optional, fully ignores
                                                    for shard-level
                                                  type: string
                                                dataVolumeClaimTemplate:
                                                  description: optional, template
                                                    name from chi.spec.templates.volumeClaimTemplates,
                                                    allows customization each `PVC`
                                                    which will mount for clickhouse
                                                    data directory in each `Pod` during
                                                    render and reconcile every StatefulSet.spec
                                                    resource described in `chi.spec.configuration.clusters`
                                                    only for one shard
                                                  type: string
                                                hostTemplate:
                                                  description: optional, template
                                                    name from chi.spec.templates.hostTemplates,
                                                    which will apply to configure
                                                    each `clickhouse-server` instance
                                                    during render ConfigMap resources
                                                    which will mount into `Pod` only
                                                    for one shard
                                                  type: string
                                                logVolumeClaimTemplate:
                                                  description: optional, template
                                                    name from chi.spec.templates.volumeClaimTemplates,
                                                    allows customization each `PVC`
                                                    which will mount for clickhouse
                                                    log directory in each `Pod` during
                                                    render and reconcile every StatefulSet.spec
                                                    resource described in `chi.spec.configuration.clusters`
                                                    only for one shard
                                                  type: string
                                                podTemplate:
                                                  description: optional, template
                                                    name from chi.spec.templates.podTemplates,
                                                    allows customization each `Pod`
                                                    resource during render and reconcile
                                                    each StatefulSet.spec resource
                                                    described in `chi.spec.configuration.clusters`
                                                    only for one shard
                                                  type: string
                                                replicaServiceTemplate:
                                                  description: optional, template
                                                    name from chi.spec.templates.serviceTemplates,
                                                    allows customization for each
                                                    `Service` resource which will
                                                    created by `clickhouse-operator`
                                                    which cover each replica inside
                                                    each shard inside clickhouse cluster
                                                    described in `chi.spec.configuration.clusters`
                                                    only for one shard
                                                  type: string
                                                serviceTemplate:
                                                  description: optional, fully ignores
                                                    for shard-level
                                                  type: string
                                                shardServiceTemplate:
                                                  description: optional, template
                                                    name from chi.spec.templates.serviceTemplates,
                                                    allows customization for each
                                                    `Service` resource which will
                                                    created by `clickhouse-operator`
                                                    which cover shard inside clickhouse
                                                    cluster described in `chi.spec.configuration.clusters`
                                                    only for one shard
                                                  type: string
                                                volumeClaimTemplate:
                                                  description: DEPRECATED! VolumeClaimTemplate
                                                    is deprecated in favor of DataVolumeClaimTemplate
                                                    and LogVolumeClaimTemplate
                                                  type: string
                                              type: object
                                          type: object
                                        type: array
                                      shardsCount:
                                        description: optional, count of shards related
                                          to current replica, you can override each
                                          shard behavior on low-level `chi.spec.configuration.clusters.layout.replicas.shards`
                                        minimum: 1
                                        type: integer
                                      templates:
                                        description: |
                                          optional, configuration of the templates names which will use for generate Kubernetes resources according to selected replica
                                          override top-level `chi.spec.configuration.templates`, cluster-level `chi.spec.configuration.clusters.templates`
                                        properties:
                                          clusterServiceTemplate:
                                            description: optional, fully ignores for
                                              replica-level
                                            type: string
                                          dataVolumeClaimTemplate:
                                            description: optional, template name from
                                              chi.spec.templates.volumeClaimTemplates,
                                              allows customization each `PVC` which
                                              will mount for clickhouse data directory
                                              in each `Pod` during render and reconcile
                                              every StatefulSet.spec resource described
                                              in `chi.spec.configuration.clusters`
                                              only for one shard
                                            type: string
                                          hostTemplate:
                                            description: optional, template name from
                                              chi.spec.templates.hostTemplates, which
                                              will apply to configure `clickhouse-server`
                                              instance during render ConfigMap resources
                                              which will mount into `Pod` only for
                                              one replica
                                            type: string
                                          logVolumeClaimTemplate:
                                            description: optional, template name from
                                              chi.spec.templates.volumeClaimTemplates,
                                              allows customization each `PVC` which
                                              will mount for clickhouse log directory
                                              in each `Pod` during render and reconcile
                                              every StatefulSet.spec resource described
                                              in `chi.spec.configuration.clusters`
                                              only for one shard
                                            type: string
                                          podTemplate:
                                            description: optional, template name from
                                              chi.spec.templates.podTemplates, allows
                                              customization each `Pod` resource during
                                              render and reconcile each StatefulSet.spec
                                              resource described in `chi.spec.configuration.clusters`
                                              only for one replica
                                            type: string
                                          replicaServiceTemplate:
                                            description: optional, template name from
                                              chi.spec.templates.serviceTemplates,
                                              allows customization for each `Service`
                                              resource which will created by `clickhouse-operator`
                                              which cover each replica inside each
                                              shard inside clickhouse cluster described
                                              in `chi.spec.configuration.clusters`
                                              only for one replica
                                            type: string
                                          serviceTemplate:
                                            description: optional, fully ignores for
                                              replica-level
                                            type: string
                                          shardServiceTemplate:
                                            description: optional, fully ignores for
                                              replica-level
                                            type: string
                                          volumeClaimTemplate:
                                            description: DEPRECATED! VolumeClaimTemplate
                                              is deprecated in favor of DataVolumeClaimTemplate
                                              and LogVolumeClaimTemplate
                                            type: string
                                        type: object
                                    type: object
                                  type: array
                                replicasCount:
                                  description: how much replicas in each shards for
                                    current ClickHouse cluster will run in Kubernetes,
                                    each replica is a separate `StatefulSet` which
                                    contains only one `Pod` with `clickhouse-server`
                                    instance, every shard contains 1 replica by default
                                  type: integer
                                shards:
                                  description: optional, allows override top-level
                                    `chi.spec.configuration`, cluster-level `chi.spec.configuration.clusters`
                                    settings for each shard separately, use it only
                                    if you fully understand what you do
                                  items:
                                    properties:
                                      definitionType:
                                        description: DEPRECATED - to be removed soon
                                        type: string
                                      files:
                                        description: |
                                          optional, allows define content of any setting file inside each `Pod` only in one shard during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
                                          override top-level `chi.spec.configuration.files` and cluster-level `chi.spec.configuration.clusters.files`
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      internalReplication:
                                        description: |
                                          optional, `true` by default when `chi.spec.configuration.clusters[].layout.ReplicaCount` > 1 and 0 otherwise
                                          allows setup <internal_replication> setting which will use during insert into tables with `Distributed` engine for insert only in one live replica and other replicas will download inserted data during replication,
                                          will apply in <remote_servers> inside ConfigMap which will mount in /etc/clickhouse-server/config.d/chop-generated-remote_servers.xml
                                          More details: https://clickhouse.tech/docs/en/engines/table-engines/special/distributed/
                                        enum:
                                        - ""
                                        - "0"
                                        - "1"
                                        - "False"
                                        - "false"
                                        - "True"
                                        - "true"
                                        - "No"
                                        - "no"
                                        - "Yes"
                                        - "yes"
                                        - "Off"
                                        - "off"
                                        - "On"
                                        - "on"
                                        - Disable
                                        - disable
                                        - Enable
                                        - enable
                                        - Disabled
                                        - disabled
                                        - Enabled
                                        - enabled
                                        type: string
                                      name:
                                        description: optional, by default shard name
                                          is generated, but you can override it and
                                          setup custom name
                                        maxLength: 15
                                        minLength: 1
                                        pattern: ^[a-zA-Z0-9-]{0,15}$
                                        type: string
                                      replicas:
                                        description: |
                                          optional, allows override behavior for selected replicas from cluster-level `chi.spec.configuration.clusters` and shard-level `chi.spec.configuration.clusters.layout.shards`
                                        items:
                                          properties:
                                            files:
                                              description: |
                                                optional, allows define content of any setting file inside `Pod` only in one replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
                                                override top-level `chi.spec.configuration.files`, cluster-level `chi.spec.configuration.clusters.files` and shard-level `chi.spec.configuration.clusters.layout.shards.files`
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            httpPort:
                                              description: |
                                                optional, setup `Pod.spec.containers.ports` with name `http` for selected replica, override `chi.spec.templates.hostTemplates.spec.httpPort`
                                                allows connect to `clickhouse-server` via HTTP protocol via kubernetes `Service`
                                              maximum: 65535
                                              minimum: 1
                                              type: integer
                                            interserverHTTPPort:
                                              description: |
                                                optional, setup `Pod.spec.containers.ports` with name `interserver` for selected replica, override `chi.spec.templates.hostTemplates.spec.interserverHTTPPort`
                                                allows connect between replicas inside same shard during fetch replicated data parts HTTP protocol
                                              maximum: 65535
                                              minimum: 1
                                              type: integer
                                            name:
                                              description: optional, by default replica
                                                name is generated, but you can override
                                                it and setup custom name
                                              maxLength: 15
                                              minLength: 1
                                              pattern: ^[a-zA-Z0-9-]{0,15}$
                                              type: string
                                            settings:
                                              description: |
                                                optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in `Pod` only in one replica during generate `ConfigMap` which will mount in `/etc/clickhouse-server/conf.d/`
                                                override top-level `chi.spec.configuration.settings`, cluster-level `chi.spec.configuration.clusters.settings` and shard-level `chi.spec.configuration.clusters.layout.shards.settings`
                                                More details: https://clickhouse.tech/docs/en/operations/settings/settings/
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            tcpPort:
                                              description: |
                                                optional, setup `Pod.spec.containers.ports` with name `tcp` for selected replica, override `chi.spec.templates.hostTemplates.spec.tcpPort`
                                                allows connect to `clickhouse-server` via TCP Native protocol via kubernetes `Service`
                                              maximum: 65535
                                              minimum: 1
                                              type: integer
                                            templates:
                                              description: |
                                                optional, configuration of the templates names which will use for generate Kubernetes resources according to selected replica
                                                override top-level `chi.spec.configuration.templates`, cluster-level `chi.spec.configuration.clusters.templates` and shard-level `chi.spec.configuration.clusters.layout.shards.templates`
                                              properties:
                                                clusterServiceTemplate:
                                                  description: optional, fully ignores
                                                    for replica-level
                                                  type: string
                                                dataVolumeClaimTemplate:
                                                  description: optional, template
                                                    name from chi.spec.templates.volumeClaimTemplates,
                                                    allows customization each `PVC`
                                                    which will mount for clickhouse
                                                    data directory in each `Pod` during
                                                    render and reconcile every StatefulSet.spec
                                                    resource described in `chi.spec.configuration.clusters`
                                                    only for one shard
                                                  type: string
                                                hostTemplate:
                                                  description: optional, template
                                                    name from chi.spec.templates.hostTemplates,
                                                    which will apply to configure
                                                    `clickhouse-server` instance during
                                                    render ConfigMap resources which
                                                    will mount into `Pod` only for
                                                    one replica
                                                  type: string
                                                logVolumeClaimTemplate:
                                                  description: optional, template
                                                    name from chi.spec.templates.volumeClaimTemplates,
                                                    allows customization each `PVC`
                                                    which will mount for clickhouse
                                                    log directory in each `Pod` during
                                                    render and reconcile every StatefulSet.spec
                                                    resource described in `chi.spec.configuration.clusters`
                                                    only for one shard
                                                  type: string
                                                podTemplate:
                                                  description: optional, template
                                                    name from chi.spec.templates.podTemplates,
                                                    allows customization each `Pod`
                                                    resource during render and reconcile
                                                    each StatefulSet.spec resource
                                                    described in `chi.spec.configuration.clusters`
                                                    only for one replica
                                                  type: string
                                                replicaServiceTemplate:
                                                  description: optional, template
                                                    name from chi.spec.templates.serviceTemplates,
                                                    allows customization for each
                                                    `Service` resource which will
                                                    created by `clickhouse-operator`
                                                    which cover each replica inside
                                                    each shard inside clickhouse cluster
                                                    described in `chi.spec.configuration.clusters`
                                                    only for one replica
                                                  type: string
                                                serviceTemplate:
                                                  description: optional, fully ignores
                                                    for replica-level
                                                  type: string
                                                shardServiceTemplate:
                                                  description: optional, fully ignores
                                                    for replica-level
                                                  type: string
                                                volumeClaimTemplate:
                                                  description: DEPRECATED! VolumeClaimTemplate
                                                    is deprecated in favor of DataVolumeClaimTemplate
                                                    and LogVolumeClaimTemplate
                                                  type: string
                                              type: object
                                          type: object
                                        type: array
                                      replicasCount:
                                        description: |
                                          optional, how much replicas in selected shard for selected ClickHouse cluster will run in Kubernetes, each replica is a separate `StatefulSet` which contains only one `Pod` with `clickhouse-server` instance,
                                          shard contains 1 replica by default
                                          override cluster-level `chi.spec.configuration.clusters.layout.replicasCount`
                                        minimum: 1
                                        type: integer
                                      settings:
                                        description: |
                                          optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in each `Pod` only in one shard during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/`
                                          override top-level `chi.spec.configuration.settings` and cluster-level `chi.spec.configuration.clusters.settings`
                                          More details: https://clickhouse.tech/docs/en/operations/settings/settings/
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      templates:
                                        description: |
                                          optional, configuration of the templates names which will use for generate Kubernetes resources according to selected shard
                                          override top-level `chi.spec.configuration.templates` and cluster-level `chi.spec.configuration.clusters.templates`
                                        properties:
                                          clusterServiceTemplate:
                                            description: optional, fully ignores for
                                              shard-level
                                            type: string
                                          dataVolumeClaimTemplate:
                                            description: optional, template name from
                                              chi.spec.templates.volumeClaimTemplates,
                                              allows customization each `PVC` which
                                              will mount for clickhouse data directory
                                              in each `Pod` during render and reconcile
                                              every StatefulSet.spec resource described
                                              in `chi.spec.configuration.clusters`
                                              only for one shard
                                            type: string
                                          hostTemplate:
                                            description: optional, template name from
                                              chi.spec.templates.hostTemplates, which
                                              will apply to configure each `clickhouse-server`
                                              instance during render ConfigMap resources
                                              which will mount into `Pod` only for
                                              one shard
                                            type: string
                                          logVolumeClaimTemplate:
                                            description: optional, template name from
                                              chi.spec.templates.volumeClaimTemplates,
                                              allows customization each `PVC` which
                                              will mount for clickhouse log directory
                                              in each `Pod` during render and reconcile
                                              every StatefulSet.spec resource described
                                              in `chi.spec.configuration.clusters`
                                              only for one shard
                                            type: string
                                          podTemplate:
                                            description: optional, template name from
                                              chi.spec.templates.podTemplates, allows
                                              customization each `Pod` resource during
                                              render and reconcile each StatefulSet.spec
                                              resource described in `chi.spec.configuration.clusters`
                                              only for one shard
                                            type: string
                                          replicaServiceTemplate:
                                            description: optional, template name from
                                              chi.spec.templates.serviceTemplates,
                                              allows customization for each `Service`
                                              resource which will created by `clickhouse-operator`
                                              which cover each replica inside each
                                              shard inside clickhouse cluster described
                                              in `chi.spec.configuration.clusters`
                                              only for one shard
                                            type: string
                                          serviceTemplate:
                                            description: optional, fully ignores for
                                              shard-level
                                            type: string
                                          shardServiceTemplate:
                                            description: optional, template name from
                                              chi.spec.templates.serviceTemplates,
                                              allows customization for each `Service`
                                              resource which will created by `clickhouse-operator`
                                              which cover shard inside clickhouse
                                              cluster described in `chi.spec.configuration.clusters`
                                              only for one shard
                                            type: string
                                          volumeClaimTemplate:
                                            description: DEPRECATED! VolumeClaimTemplate
                                              is deprecated in favor of DataVolumeClaimTemplate
                                              and LogVolumeClaimTemplate
                                            type: string
                                        type: object
                                      weight:
                                        description: |
                                          optional, 1 by default, allows setup shard <weight> setting which will use during insert into tables with `Distributed` engine,
                                          will apply in <remote_servers> inside ConfigMap which will mount in /etc/clickhouse-server/config.d/chop-generated-remote_servers.xml
                                          More details: https://clickhouse.tech/docs/en/engines/table-engines/special/distributed/
                                        type: integer
                                    type: object
                                  type: array
                                shardsCount:
                                  description: how much shards for current ClickHouse
                                    cluster will run in Kubernetes, each shard contains
                                    shared-nothing part of data and contains set of
                                    replicas, cluster contains 1 shard by default
                                  type: integer
                                type:
                                  description: DEPRECATED - to be removed soon
                                  type: string
                              type: object
                            name:
                              description: cluster name, used to identify set of ClickHouse
                                servers and wide used during generate names of related
                                Kubernetes resources
                              maxLength: 15
                              minLength: 1
                              pattern: ^[a-zA-Z0-9-]{0,15}$
                              type: string
                            schemaPolicy:
                              description: |
                                describes how schema is propagated within replicas and shards
                              properties:
                                replica:
                                  description: how schema is propagated within a replica
                                  enum:
                                  - None
                                  - All
                                  type: string
                                shard:
                                  description: how schema is propagated between shards
                                  enum:
                                  - None
                                  - All
                                  - DistributedTablesOnly
                                  type: string
                              type: object
                            settings:
                              description: |
                                optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in each `Pod` only in one cluster during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/`
                                override top-level `chi.spec.configuration.settings`
                                More details: https://clickhouse.tech/docs/en/operations/settings/settings/
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            templates:
                              description: |
                                optional, configuration of the templates names which will use for generate Kubernetes resources according to selected cluster
                                override top-level `chi.spec.configuration.templates`
                              properties:
                                clusterServiceTemplate:
                                  description: optional, template name from chi.spec.templates.serviceTemplates,
                                    allows customization for each `Service` resource
                                    which will created by `clickhouse-operator` which
                                    cover each clickhouse cluster described in `chi.spec.configuration.clusters`
                                    only for one cluster
                                  type: string
                                dataVolumeClaimTemplate:
                                  description: optional, template name from chi.spec.templates.volumeClaimTemplates,
                                    allows customization each `PVC` which will mount
                                    for clickhouse data directory in each `Pod` during
                                    render and reconcile every StatefulSet.spec resource
                                    described in `chi.spec.configuration.clusters`
                                    only for one cluster
                                  type: string
                                hostTemplate:
                                  description: optional, template name from chi.spec.templates.hostTemplates,
                                    which will apply to configure each `clickhouse-server`
                                    instance during render ConfigMap resources which
                                    will mount into `Pod` only for one cluster
                                  type: string
                                logVolumeClaimTemplate:
                                  description: optional, template name from chi.spec.templates.volumeClaimTemplates,
                                    allows customization each `PVC` which will mount
                                    for clickhouse log directory in each `Pod` during
                                    render and reconcile every StatefulSet.spec resource
                                    described in `chi.spec.configuration.clusters`
                                    only for one cluster
                                  type: string
                                podTemplate:
                                  description: optional, template name from chi.spec.templates.podTemplates,
                                    allows customization each `Pod` resource during
                                    render and reconcile each StatefulSet.spec resource
                                    described in `chi.spec.configuration.clusters`
                                    only for one cluster
                                  type: string
                                replicaServiceTemplate:
                                  description: optional, template name from chi.spec.templates.serviceTemplates,
                                    allows customization for each `Service` resource
                                    which will created by `clickhouse-operator` which
                                    cover each replica inside each shard inside each
                                    clickhouse cluster described in `chi.spec.configuration.clusters`
                                    only for one cluster
                                  type: string
                                serviceTemplate:
                                  description: optional, fully ignores for cluster-level
                                  type: string
                                shardServiceTemplate:
                                  description: optional, template name from chi.spec.templates.serviceTemplates,
                                    allows customization for each `Service` resource
                                    which will created by `clickhouse-operator` which
                                    cover each shard inside clickhouse cluster described
                                    in `chi.spec.configuration.clusters` only for
                                    one cluster
                                  type: string
                                volumeClaimTemplate:
                                  description: DEPRECATED! VolumeClaimTemplate is
                                    deprecated in favor of DataVolumeClaimTemplate
                                    and LogVolumeClaimTemplate
                                  type: string
                              type: object
                            zookeeper:
                              description: |
                                optional, allows configure <yandex><zookeeper>..</zookeeper></yandex> section in each `Pod` only in current ClickHouse cluster, during generate `ConfigMap` which will mounted in `/etc/clickhouse-server/config.d/`
                                override top-level `chi.spec.configuration.zookeeper` settings
                              properties:
                                identity:
                                  description: optional access credentials string
                                    with `user:password` format used when use digest
                                    authorization in Zookeeper
                                  type: string
                                nodes:
                                  description: describe every available zookeeper
                                    cluster node for interaction
                                  items:
                                    properties:
                                      host:
                                        description: dns name or ip address for Zookeeper
                                          node
                                        type: string
                                      port:
                                        description: TCP port which used to connect
                                          to Zookeeper node
                                        maximum: 65535
                                        minimum: 0
                                        type: integer
                                    type: object
                                  type: array
                                operation_timeout_ms:
                                  description: one operation timeout during Zookeeper
                                    transactions
                                  type: integer
                                root:
                                  description: optional root znode path inside zookeeper
                                    to store ClickHouse related data (replication
                                    queue or distributed DDL)
                                  type: string
                                session_timeout_ms:
                                  description: session timeout during connect to Zookeeper
                                  type: integer
                              type: object
                          type: object
                        type: array
                      files:
                        description: |
                          allows define content of any setting file inside each `Pod` during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
                          every key in this object is the file name
                          every value in this object is the file content
                          you can use `!!binary |` and base64 for binary files, see details here https://yaml.org/type/binary.html
                          each key could contains prefix like USERS, COMMON, HOST or config.d, users.d, cond.d, wrong prefixes will ignored, subfolders also will ignored
                          More details: https://github.com/Altinity/clickhouse-operator/blob/master/docs/chi-examples/05-settings-05-files-nested.yaml
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      profiles:
                        description: |
                          allows configure <yandex><profiles>..</profiles></yandex> section in each `Pod` during generate `ConfigMap` which will mount in `/etc/clickhouse-server/users.d/`
                          you can configure any aspect of settings profile
                          More details: https://clickhouse.tech/docs/en/operations/settings/settings-profiles/
                          Your yaml code will convert to XML, see examples https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#specconfigurationprofiles
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      quotas:
                        description: |
                          allows configure <yandex><quotas>..</quotas></yandex> section in each `Pod` during generate `ConfigMap` which will mount in `/etc/clickhouse-server/users.d/`
                          you can configure any aspect of resource quotas
                          More details: https://clickhouse.tech/docs/en/operations/quotas/
                          Your yaml code will convert to XML, see examples https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#specconfigurationquotas
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      settings:
                        description: |
                          allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in each `Pod` during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/`
                          More details: https://clickhouse.tech/docs/en/operations/settings/settings/
                          Your yaml code will convert to XML, see examples https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#specconfigurationsettings
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      users:
                        description: |
                          allows configure <yandex><users>..</users></yandex> section in each `Pod` during generate `ConfigMap` which will mount in `/etc/clickhouse-server/users.d/`
                          you can configure password hashed, authorization restrictions, database level security row filters etc.
                          More details: https://clickhouse.tech/docs/en/operations/settings/settings-users/
                          Your yaml code will convert to XML, see examples https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#specconfigurationusers
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      zookeeper:
                        description: |
                          allows configure <yandex><zookeeper>..</zookeeper></yandex> section in each `Pod` during generate `ConfigMap` which will mounted in `/etc/clickhouse-server/config.d/`
                          `clickhouse-operator` itself doesn't manage Zookeeper, please install Zookeeper separatelly look examples on https://github.com/Altinity/clickhouse-operator/tree/master/deploy/zookeeper/
                          currently, zookeeper (or clickhouse-keeper replacement) used for *ReplicatedMergeTree table engines and for `distributed_ddl`
                          More details: https://clickhouse.tech/docs/en/operations/server-configuration-parameters/settings/#server-settings_zookeeper
                        properties:
                          identity:
                            description: optional access credentials string with `user:password`
                              format used when use digest authorization in Zookeeper
                            type: string
                          nodes:
                            description: describe every available zookeeper cluster
                              node for interaction
                            items:
                              properties:
                                host:
                                  description: dns name or ip address for Zookeeper
                                    node
                                  type: string
                                port:
                                  description: TCP port which used to connect to Zookeeper
                                    node
                                  maximum: 65535
                                  minimum: 0
                                  type: integer
                              type: object
                            type: array
                          operation_timeout_ms:
                            description: one operation timeout during Zookeeper transactions
                            type: integer
                          root:
                            description: optional root znode path inside zookeeper
                              to store ClickHouse related data (replication queue
                              or distributed DDL)
                            type: string
                          session_timeout_ms:
                            description: session timeout during connect to Zookeeper
                            type: integer
                        type: object
                    type: object
                  defaults:
                    description: |
                      define default behavior for whole ClickHouseInstallation, some behavior can be re-define on cluster, shard and replica level
                      More info: https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#specdefaults
                    properties:
                      distributedDDL:
                        description: |
                          allows change `<yandex><distributed_ddl></distributed_ddl></yandex>` settings
                          More info: https://clickhouse.tech/docs/en/operations/server-configuration-parameters/settings/#server-settings-distributed_ddl
                        properties:
                          profile:
                            description: Settings from this profile will be used to
                              execute DDL queries
                            type: string
                        type: object
                      replicasUseFQDN:
                        description: |
                          define should replicas be specified by FQDN in `<host></host>`, then "no" then will use short hostname and clickhouse-server will use kubernetes default suffixes for properly DNS lookup
                          "yes" by default
                        enum:
                        - ""
                        - "0"
                        - "1"
                        - "False"
                        - "false"
                        - "True"
                        - "true"
                        - "No"
                        - "no"
                        - "Yes"
                        - "yes"
                        - "Off"
                        - "off"
                        - "On"
                        - "on"
                        - Disable
                        - disable
                        - Enable
                        - enable
                        - Disabled
                        - disabled
                        - Enabled
                        - enabled
                        type: string
                      templates:
                        description: optional, configuration of the templates names
                          which will use for generate Kubernetes resources according
                          to one or more ClickHouse clusters described in current
                          ClickHouseInstallation (chi) resource
                        properties:
                          clusterServiceTemplate:
                            description: optional, template name from chi.spec.templates.serviceTemplates,
                              allows customization for each `Service` resource which
                              will created by `clickhouse-operator` which cover each
                              clickhouse cluster described in `chi.spec.configuration.clusters`
                            type: string
                          dataVolumeClaimTemplate:
                            description: optional, template name from chi.spec.templates.volumeClaimTemplates,
                              allows customization each `PVC` which will mount for
                              clickhouse data directory in each `Pod` during render
                              and reconcile every StatefulSet.spec resource described
                              in `chi.spec.configuration.clusters`
                            type: string
                          hostTemplate:
                            description: optional, template name from chi.spec.templates.hostTemplates,
                              which will apply to configure every `clickhouse-server`
                              instance during render ConfigMap resources which will
                              mount into `Pod`
                            type: string
                          logVolumeClaimTemplate:
                            description: optional, template name from chi.spec.templates.volumeClaimTemplates,
                              allows customization each `PVC` which will mount for
                              clickhouse log directory in each `Pod` during render
                              and reconcile every StatefulSet.spec resource described
                              in `chi.spec.configuration.clusters`
                            type: string
                          podTemplate:
                            description: optional, template name from chi.spec.templates.podTemplates,
                              allows customization each `Pod` resource during render
                              and reconcile each StatefulSet.spec resource described
                              in `chi.spec.configuration.clusters`
                            type: string
                          replicaServiceTemplate:
                            description: optional, template name from chi.spec.templates.serviceTemplates,
                              allows customization for each `Service` resource which
                              will created by `clickhouse-operator` which cover each
                              replica inside each shard inside each clickhouse cluster
                              described in `chi.spec.configuration.clusters`
                            type: string
                          serviceTemplate:
                            description: optional, template name from chi.spec.templates.serviceTemplates,
                              allows customization for one `Service` resource which
                              will created by `clickhouse-operator` which cover all
                              clusters in whole `chi` resource
                            type: string
                          shardServiceTemplate:
                            description: optional, template name from chi.spec.templates.serviceTemplates,
                              allows customization for each `Service` resource which
                              will created by `clickhouse-operator` which cover each
                              shard inside clickhouse cluster described in `chi.spec.configuration.clusters`
                            type: string
                          volumeClaimTemplate:
                            description: DEPRECATED! VolumeClaimTemplate is deprecated
                              in favor of DataVolumeClaimTemplate and LogVolumeClaimTemplate
                            type: string
                        type: object
                    type: object
                  namespaceDomainPattern:
                    description: custom domain suffix which will add to end of `Service`
                      or `Pod` name, use it when you use custom cluster domain in
                      your Kubernetes cluster
                    type: string
                  reconciling:
                    description: optional, allows tuning reconciling cycle for ClickhouseInstallation
                      from clickhouse-operator side
                    properties:
                      cleanup:
                        description: optional, define behavior for cleanup Kubernetes
                          resources during reconcile cycle
                        properties:
                          reconcileFailedObjects:
                            description: what clickhouse-operator shall do when reconciling
                              Kubernetes resources are failed, default behavior is
                              `Retain`
                            properties:
                              configMap:
                                description: behavior policy for failed ConfigMap
                                  reconciling, Retain by default
                                enum:
                                - Retain
                                - Delete
                                type: string
                              pvc:
                                description: behavior policy for failed PVC reconciling,
                                  Retain by default
                                enum:
                                - Retain
                                - Delete
                                type: string
                              service:
                                description: behavior policy for failed Service reconciling,
                                  Retain by default
                                enum:
                                - Retain
                                - Delete
                                type: string
                              statefulSet:
                                description: behavior policy for failed StatefulSet
                                  reconciling, Retain by default
                                enum:
                                - Retain
                                - Delete
                                type: string
                            type: object
                          unknownObjects:
                            description: what clickhouse-operator shall do when found
                              Kubernetes resources which should be managed with clickhouse-operator,
                              but not have `ownerReference` to any currently managed
                              `ClickHouseInstallation` resource, default behavior
                              is `Delete`
                            properties:
                              configMap:
                                description: behavior policy for unknown ConfigMap,
                                  Delete by default
                                enum:
                                - Retain
                                - Delete
                                type: string
                              pvc:
                                description: behavior policy for unknown PVC, Delete
                                  by default
                                enum:
                                - Retain
                                - Delete
                                type: string
                              service:
                                description: behavior policy for unknown Service,
                                  Delete by default
                                enum:
                                - Retain
                                - Delete
                                type: string
                              statefulSet:
                                description: behavior policy for unknown StatefulSet,
                                  Delete by default
                                enum:
                                - Retain
                                - Delete
                                type: string
                            type: object
                        type: object
                      configMapPropagationTimeout:
                        description: |
                          timeout in seconds when `clickhouse-operator` will wait when applied `ConfigMap` during reconcile `ClickhouseInstallation` pods will updated from cache
                          see details: https://kubernetes.io/docs/concepts/configuration/configmap/#mounted-configmaps-are-updated-automatically
                        maximum: 3600
                        minimum: 0
                        type: integer
                      policy:
                        description: DEPRECATED
                        type: string
                    type: object
                  restart:
                    description: This is a 'soft restart' button. When set to 'RollingUpdate'
                      operator will restart ClickHouse pods in a graceful way. Remove
                      it after the use in order to avoid unneeded restarts
                    enum:
                    - ""
                    - RollingUpdate
                    type: string
                  stop:
                    description: |
                      Allow stop all ClickHouse clusters described in current chi.
                      Stop mechanism works as follows:
                       - When `stop` is `1` then setup `Replicas: 0` in each related to current `chi` StatefulSet resource, all `Pods` and `Service` resources will desctroy, but PVCs still live
                       - When `stop` is `0` then `Pods` will created again and will attach retained PVCs and `Service` also will created again
                    enum:
                    - ""
                    - "0"
                    - "1"
                    - "False"
                    - "false"
                    - "True"
                    - "true"
                    - "No"
                    - "no"
                    - "Yes"
                    - "yes"
                    - "Off"
                    - "off"
                    - "On"
                    - "on"
                    - Disable
                    - disable
                    - Enable
                    - enable
                    - Disabled
                    - disabled
                    - Enabled
                    - enabled
                    type: string
                  taskID:
                    description: Allow define custom taskID for named update and watch
                      status of this update execution in .status.taskIDs field, by
                      default every update of chi manifest will generate random taskID
                    type: string
                  templates:
                    description: allows define templates which will use for render
                      Kubernetes resources like StatefulSet, ConfigMap, Service, PVC,
                      by default, clickhouse-operator have own templates, but you
                      can override it
                    properties:
                      hostTemplates:
                        description: hostTemplate will use during apply to generate
                          `clickhose-server` config files
                        items:
                          properties:
                            name:
                              description: template name, could use to link inside
                                top-level `chi.spec.defaults.templates.hostTemplate`,
                                cluster-level `chi.spec.configuration.clusters.templates.hostTemplate`,
                                shard-level `chi.spec.configuration.clusters.layout.shards.temlates.hostTemplate`,
                                replica-level `chi.spec.configuration.clusters.layout.replicas.templates.hostTemplate`
                              type: string
                            portDistribution:
                              description: define how will distribute numeric values
                                of named ports in `Pod.spec.containers.ports` and
                                clickhouse-server configs
                              items:
                                properties:
                                  type:
                                    description: type of distribution, when `Unspecified`
                                      (default value) then all listen ports on clickhouse-server
                                      configuration in all Pods will have the same
                                      value, when `ClusterScopeIndex` then ports will
                                      increment to offset from base value depends
                                      on shard and replica index inside cluster with
                                      combination of `chi.spec.templates.podTemlates.spec.HostNetwork`
                                      it allows setup ClickHouse cluster inside Kubernetes
                                      and provide access via external network bypass
                                      Kubernetes internal network
                                    enum:
                                    - ""
                                    - Unspecified
                                    - ClusterScopeIndex
                                    type: string
                                type: object
                              type: array
                            spec:
                              properties:
                                files:
                                  description: |
                                    optional, allows define content of any setting file inside each `Pod` where this template will apply during generate `ConfigMap` which will mount in `/etc/clickhouse-server/config.d/` or `/etc/clickhouse-server/conf.d/` or `/etc/clickhouse-server/users.d/`
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                httpPort:
                                  description: |
                                    optional, setup `http_port` inside `clickhouse-server` settings for each Pod where current template will apply
                                    if specified, should have equal value with `chi.spec.templates.podTemplates.spec.containers.ports[name=http]`
                                    More info: https://clickhouse.tech/docs/en/interfaces/http/
                                  maximum: 65535
                                  minimum: 1
                                  type: integer
                                interserverHTTPPort:
                                  description: |
                                    optional, setup `interserver_http_port` inside `clickhouse-server` settings for each Pod where current template will apply
                                    if specified, should have equal value with `chi.spec.templates.podTemplates.spec.containers.ports[name=interserver]`
                                    More info: https://clickhouse.tech/docs/en/operations/server-configuration-parameters/settings/#interserver-http-port
                                  maximum: 65535
                                  minimum: 1
                                  type: integer
                                name:
                                  description: by default, hostname will generate,
                                    but this allows define custom name for each `clickhuse-server`
                                  maxLength: 15
                                  minLength: 1
                                  pattern: ^[a-zA-Z0-9-]{0,15}$
                                  type: string
                                settings:
                                  description: |
                                    optional, allows configure `clickhouse-server` settings inside <yandex>...</yandex> tag in each `Pod` where this template will apply during generate `ConfigMap` which will mount in `/etc/clickhouse-server/conf.d/`
                                    More details: https://clickhouse.tech/docs/en/operations/settings/settings/
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                tcpPort:
                                  description: |
                                    optional, setup `tcp_port` inside `clickhouse-server` settings for each Pod where current template will apply
                                    if specified, should have equal value with `chi.spec.templates.podTemplates.spec.containers.ports[name=tcp]`
                                    More info: https://clickhouse.tech/docs/en/interfaces/tcp/
                                  maximum: 65535
                                  minimum: 1
                                  type: integer
                                templates:
                                  description: be carefull, this part of CRD allows
                                    override template inside template, don't use it
                                    if you don't understand what you do
                                  properties:
                                    clusterServiceTemplate:
                                      type: string
                                    dataVolumeClaimTemplate:
                                      type: string
                                    hostTemplate:
                                      type: string
                                    logVolumeClaimTemplate:
                                      type: string
                                    podTemplate:
                                      type: string
                                    replicaServiceTemplate:
                                      type: string
                                    serviceTemplate:
                                      type: string
                                    shardServiceTemplate:
                                      type: string
                                  type: object
                              type: object
                          type: object
                        type: array
                      podTemplates:
                        description: |
                          podTemplate will use during render `Pod` inside `StatefulSet.spec` and allows define rendered `Pod.spec`, pod scheduling distribution and pod zone
                          More information: https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#spectemplatespodtemplates
                        items:
                          properties:
                            distribution:
                              description: DEPRECATED, shortcut for `chi.spec.templates.podTemplates.spec.affinity.podAntiAffinity`
                              enum:
                              - ""
                              - Unspecified
                              - OnePerHost
                              type: string
                            generateName:
                              description: allows define format for generated `Pod`
                                name, look to https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#spectemplatesservicetemplates
                                for details about aviailable template variables
                              type: string
                            metadata:
                              description: |
                                allows pass standard object's metadata from template to Pod
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            name:
                              description: template name, could use to link inside
                                top-level `chi.spec.defaults.templates.podTemplate`,
                                cluster-level `chi.spec.configuration.clusters.templates.podTemplate`,
                                shard-level `chi.spec.configuration.clusters.layout.shards.temlates.podTemplate`,
                                replica-level `chi.spec.configuration.clusters.layout.replicas.templates.podTemplate`
                              type: string
                            podDistribution:
                              description: define ClickHouse Pod distibution policy
                                between Kubernetes Nodes inside Shard, Replica, Namespace,
                                CHI, another ClickHouse cluster
                              items:
                                properties:
                                  number:
                                    description: define, how much ClickHouse Pods
                                      could be inside selected scope with selected
                                      distribution type
                                    maximum: 65535
                                    minimum: 0
                                    type: integer
                                  scope:
                                    description: scope for apply each podDistribution
                                    enum:
                                    - ""
                                    - Unspecified
                                    - Shard
                                    - Replica
                                    - Cluster
                                    - ClickHouseInstallation
                                    - Namespace
                                    type: string
                                  topologyKey:
                                    description: 'use for inter-pod affinity look
                                      to `pod.spec.affinity.podAntiAffinity.preferredDuringSchedulingIgnoredDuringExecution.podAffinityTerm.topologyKey`,
                                      More info: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity'
                                    type: string
                                  type:
                                    description: you can define multiple affinity
                                      policy types
                                    enum:
                                    - ""
                                    - Unspecified
                                    - ClickHouseAntiAffinity
                                    - ShardAntiAffinity
                                    - ReplicaAntiAffinity
                                    - AnotherNamespaceAntiAffinity
                                    - AnotherClickHouseInstallationAntiAffinity
                                    - AnotherClusterAntiAffinity
                                    - MaxNumberPerNode
                                    - NamespaceAffinity
                                    - ClickHouseInstallationAffinity
                                    - ClusterAffinity
                                    - ShardAffinity
                                    - ReplicaAffinity
                                    - PreviousTailAffinity
                                    - CircularReplication
                                    type: string
                                type: object
                              type: array
                            spec:
                              description: allows define whole Pod.spec inside StaefulSet.spec,
                                look to https://kubernetes.io/docs/concepts/workloads/pods/#pod-templates
                                for details
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            zone:
                              description: allows define custom zone name and will
                                separate ClickHouse `Pods` between nodes, shortcut
                                for `chi.spec.templates.podTemplates.spec.affinity.podAntiAffinity`
                              properties:
                                key:
                                  description: optional, if defined, allows select
                                    kubernetes nodes by label with `name` equal `key`
                                  type: string
                                values:
                                  description: optional, if defined, allows select
                                    kubernetes nodes by label with `value` in `values`
                                  items:
                                    type: string
                                  type: array
                              type: object
                          type: object
                        type: array
                      serviceTemplates:
                        description: |
                          allows define template for rendering `Service` which would get endpoint from Pods which scoped chi-wide, cluster-wide, shard-wide, replica-wide level
                        items:
                          properties:
                            generateName:
                              description: allows define format for generated `Service`
                                name, look to https://github.com/Altinity/clickhouse-operator/blob/master/docs/custom_resource_explained.md#spectemplatesservicetemplates
                                for details about aviailable template variables
                              type: string
                            metadata:
                              description: |
                                allows pass standard object's metadata from template to Service
                                Could be use for define specificly for Cloud Provider metadata which impact to behavior of service
                                More info: https://kubernetes.io/docs/concepts/services-networking/service/
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            name:
                              description: |
                                template name, could use to link inside
                                chi-level `chi.spec.defaults.templates.serviceTemplate`
                                cluster-level `chi.spec.configuration.clusters.templates.clusterServiceTemplate`
                                shard-level `chi.spec.configuration.clusters.layout.shards.temlates.shardServiceTemplate`
                                replica-level `chi.spec.configuration.clusters.layout.replicas.templates.replicaServiceTemplate` or `chi.spec.configuration.clusters.layout.shards.replicas.replicaServiceTemplate`
                              type: string
                            spec:
                              description: |
                                describe behavior of generated Service
                                More info: https://kubernetes.io/docs/concepts/services-networking/service/
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                        type: array
                      volumeClaimTemplates:
                        description: allows define template for rendering `PVC` kubernetes
                          resource, which would use inside `Pod` for mount clickhouse
                          `data`, clickhouse `logs` or something else
                        items:
                          properties:
                            metadata:
                              description: |
                                allows pass standard object's metadata from template to PVC
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            name:
                              description: |
                                template name, could use to link inside
                                top-level `chi.spec.defaults.templates.dataVolumeClaimTemplate` or `chi.spec.defaults.templates.logVolumeClaimTemplate`,
                                cluster-level `chi.spec.configuration.clusters.templates.dataVolumeClaimTemplate` or `chi.spec.configuration.clusters.templates.logVolumeClaimTemplate`,
                                shard-level `chi.spec.configuration.clusters.layout.shards.temlates.dataVolumeClaimTemplate` or `chi.spec.configuration.clusters.layout.shards.temlates.logVolumeClaimTemplate`
                                replica-level `chi.spec.configuration.clusters.layout.replicas.templates.dataVolumeClaimTemplate` or `chi.spec.configuration.clusters.layout.replicas.templates.logVolumeClaimTemplate`
                              type: string
                            reclaimPolicy:
                              description: define behavior of `PVC` deletion policy
                                during delete `Pod`, `Delete` by default, when `Retain`
                                then `PVC` still alive even `Pod` will deleted
                              enum:
                              - ""
                              - Retain
                              - Delete
                              type: string
                            spec:
                              description: |
                                allows define all aspects of `PVC` resource
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                        type: array
                    type: object
                  templating:
                    description: optional, define policy for auto applying ClickHouseInstallationTemplate
                      inside ClickHouseInstallation
                    properties:
                      policy:
                        description: when defined as `auto` inside ClickhouseInstallationTemplate,
                          it will auto add into all ClickHouseInstallation, manual
                          value is default
                        enum:
                        - auto
                        - manual
                        type: string
                    type: object
                  troubleshoot:
                    description: allows troubleshoot Pods during CrashLoopBack state,
                      when you apply wrong configuration, `clickhouse-server` wouldn't
                      startup
                    enum:
                    - ""
                    - "0"
                    - "1"
                    - "False"
                    - "false"
                    - "True"
                    - "true"
                    - "No"
                    - "no"
                    - "Yes"
                    - "yes"
                    - "Off"
                    - "off"
                    - "On"
                    - "on"
                    - Disable
                    - disable
                    - Enable
                    - enable
                    - Disabled
                    - disabled
                    - Enabled
                    - enabled
                    type: string
                  useTemplates:
                    description: list of `ClickHouseInstallationTemplate` (chit) resource
                      names which will merge with current `Chi` manifest during render
                      Kubernetes resources to create related ClickHouse clusters
                    items:
                      properties:
                        name:
                          description: name of `ClickHouseInstallationTemplate` (chit)
                            resource
                          type: string
                        namespace:
                          description: Kubernetes namespace where need search `chit`
                            resource, depending on `watchNamespaces` settings in `clichouse-operator`
                          type: string
                        useType:
                          description: optional, current strategy is only merge, and
                            current `chi` settings have more priority than merged
                            template `chit`
                          enum:
                          - ""
                          - merge
                          type: string
                      type: object
                    type: array
                type: object
              status:
                description: Current ClickHouseInstallation manifest status, contains
                  many fields like a normalized configuration, clickhouse-operator
                  version, current action and all applied action list, current taskID
                  and all applied taskIDs and other
                properties:
                  action:
                    description: Action
                    type: string
                  actions:
                    description: Actions
                    items:
                      type: string
                    type: array
                  added:
                    description: Added Hosts count
                    minimum: 0
                    type: integer
                  chop-commit:
                    description: ClickHouse operator git commit SHA
                    type: string
                  chop-date:
                    description: ClickHouse operator build date
                    type: string
                  chop-ip:
                    description: IP address of the operator's pod which managed this
                      CHI
                    type: string
                  chop-version:
                    description: ClickHouse operator version
                    type: string
                  clusters:
                    description: Clusters count
                    minimum: 0
                    type: integer
                  delete:
                    description: About to delete Hosts count
                    minimum: 0
                    type: integer
                  deleted:
                    description: Deleted Hosts count
                    minimum: 0
                    type: integer
                  endpoint:
                    description: Endpoint
                    type: string
                  error:
                    description: Last error
                    type: string
                  errors:
                    description: Errors
                    items:
                      type: string
                    type: array
                  fqdns:
                    description: Pods FQDNs
                    items:
                      type: string
                    type: array
                  generation:
                    description: Generation
                    minimum: 0
                    type: integer
                  hosts:
                    description: Hosts count
                    minimum: 0
                    type: integer
                  normalized:
                    description: Normalized CHI
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  pod-ips:
                    description: Pod IPs
                    items:
                      type: string
                    type: array
                  pods:
                    description: Pods
                    items:
                      type: string
                    type: array
                  replicas:
                    description: Replicas count
                    minimum: 0
                    type: integer
                  shards:
                    description: Shards count
                    minimum: 0
                    type: integer
                  status:
                    description: Status
                    type: string
                  taskID:
                    description: Current task id
                    type: string
                  taskIDsCompleted:
                    description: Completed task ids
                    items:
                      type: string
                    type: array
                  taskIDsStarted:
                    description: Started task ids
                    items:
                      type: string
                    type: array
                  updated:
                    description: Updated Hosts count
                    minimum: 0
                    type: integer
                type: object
            required:
            - spec
            type: object
        served: true
        storage: true
        subresources:
          status: {}
- id: apiextensions.k8s.io/v1:CustomResourceDefinition:clickhouseoperatorconfigurations.clickhouse.altinity.com
  type: Kubernetes
  attributes:
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      labels:
        clickhouse.altinity.com/chop: 0.19.2
      name: clickhouseoperatorconfigurations.clickhouse.altinity.com
    spec:
      group: clickhouse.altinity.com
      names:
        kind: ClickHouseOperatorConfiguration
        plural: clickhouseoperatorconfigurations
        shortNames:
        - chopconf
        singular: clickhouseoperatorconfiguration
      scope: Namespaced
      versions:
      - additionalPrinterColumns:
        - description: Watch namespaces
          jsonPath: .status
          name: namespaces
          priority: 0
          type: string
        - description: Age of the resource
          jsonPath: .metadata.creationTimestamp
          name: age
          type: date
        name: v1
        schema:
          openAPIV3Schema:
            description: allows customize `clickhouse-operator` settings, need restart
              clickhouse-operator pod after adding, more details https://github.com/Altinity/clickhouse-operator/blob/master/docs/operator_configuration.md
            properties:
              spec:
                description: |
                  Allows to define settings of the clickhouse-operator.
                  More info: https://github.com/Altinity/clickhouse-operator/blob/master/config/config.yaml
                  Check into etc-clickhouse-operator* ConfigMaps if you need more control
                properties:
                  annotation:
                    properties:
                      exclude:
                        items:
                          type: string
                        type: array
                      include:
                        items:
                          type: string
                        type: array
                    type: object
                  clickhouse:
                    properties:
                      access:
                        properties:
                          password:
                            description: ClickHouse password to be used by operator
                              to connect to ClickHouse instances, deprecated, use
                              chCredentialsSecretName
                            type: string
                          port:
                            description: port to be used by operator to connect to
                              ClickHouse instances
                            maximum: 65535
                            minimum: 1
                            type: integer
                          rootCA:
                            description: Root certificate authority that clients use
                              when verifying server certificates. Used for https connection
                              to ClickHouse
                            type: string
                          scheme:
                            description: The scheme to user for connecting to ClickHouse.
                              One of http or https
                            type: string
                          secret:
                            properties:
                              name:
                                description: Name of k8s Secret with username and
                                  password to be used by operator to connect to ClickHouse
                                  instances
                                type: string
                              namespace:
                                description: Location of k8s Secret with username
                                  and password to be used by operator to connect to
                                  ClickHouse instances
                                type: string
                            type: object
                          username:
                            description: ClickHouse username to be used by operator
                              to connect to ClickHouse instances, deprecated, use
                              chCredentialsSecretName
                            type: string
                        type: object
                      configuration:
                        properties:
                          file:
                            properties:
                              path:
                                properties:
                                  common:
                                    description: Path to the folder where ClickHouse
                                      configuration files common for all instances
                                      within a CHI are located. Default - config.d
                                    type: string
                                  host:
                                    description: Path to the folder where ClickHouse
                                      configuration files unique for each instance
                                      (host) within a CHI are located. Default - conf.d
                                    type: string
                                  user:
                                    description: Path to the folder where ClickHouse
                                      configuration files with users settings are
                                      located. Files are common for all instances
                                      within a CHI.
                                    type: string
                                type: object
                            type: object
                          network:
                            properties:
                              hostRegexpTemplate:
                                description: ClickHouse server configuration `<host_regexp>...</host_regexp>`
                                  for any <user>
                                type: string
                            type: object
                          user:
                            properties:
                              default:
                                properties:
                                  networksIP:
                                    description: ClickHouse server configuration `<networks><ip>...</ip></networks>`
                                      for any <user>
                                    items:
                                      type: string
                                    type: array
                                  password:
                                    description: ClickHouse server configuration `<password>...</password>`
                                      for any <user>
                                    type: string
                                  profile:
                                    description: ClickHouse server configuration `<profile>...</profile>`
                                      for any <user>
                                    type: string
                                  quota:
                                    description: ClickHouse server configuration `<quota>...</quota>`
                                      for any <user>
                                    type: string
                                type: object
                            type: object
                        type: object
                    type: object
                  label:
                    properties:
                      appendScope:
                        description: |
                          Whether to append *Scope* labels to StatefulSet and Pod
                          - "LabelShardScopeIndex"
                          - "LabelReplicaScopeIndex"
                          - "LabelCHIScopeIndex"
                          - "LabelCHIScopeCycleSize"
                          - "LabelCHIScopeCycleIndex"
                          - "LabelCHIScopeCycleOffset"
                          - "LabelClusterScopeIndex"
                          - "LabelClusterScopeCycleSize"
                          - "LabelClusterScopeCycleIndex"
                          - "LabelClusterScopeCycleOffset"
                        enum:
                        - ""
                        - "0"
                        - "1"
                        - "False"
                        - "false"
                        - "True"
                        - "true"
                        - "No"
                        - "no"
                        - "Yes"
                        - "yes"
                        - "Off"
                        - "off"
                        - "On"
                        - "on"
                        - Disable
                        - disable
                        - Enable
                        - enable
                        - Disabled
                        - disabled
                        - Enabled
                        - enabled
                        type: string
                      exclude:
                        description: |
                          When propagating labels from the chi's `metadata.labels` section to child objects' `metadata.labels`,
                          exclude labels from the following list
                        items:
                          type: string
                        type: array
                      include:
                        items:
                          type: string
                        type: array
                    type: object
                  logger:
                    properties:
                      alsologtostderr:
                        description: boolean allows logs to stderr and files both
                        type: string
                      log_backtrace_at:
                        description: |
                          It can be set to a file and line number with a logging line.
                          Ex.: file.go:123
                          Each time when this line is being executed, a stack trace will be written to the Info log.
                        type: string
                      logtostderr:
                        description: boolean, allows logs to stderr
                        type: string
                      stderrthreshold:
                        type: string
                      v:
                        description: verbosity level of clickhouse-operator log, default
                          - 1 max - 9
                        type: string
                      vmodule:
                        description: |
                          Comma-separated list of filename=N, where filename (can be a pattern) must have no .go ext, and N is a V level.
                          Ex.: file*=2 sets the 'V' to 2 in all files with names like file*.
                        type: string
                    type: object
                  pod:
                    properties:
                      terminationGracePeriod:
                        type: integer
                    type: object
                  reconcile:
                    properties:
                      host:
                        properties:
                          wait:
                            properties:
                              exclude:
                                type: boolean
                              include:
                                type: boolean
                            type: object
                        type: object
                      runtime:
                        properties:
                          threadsNumber:
                            description: How many goroutines will be used to reconcile
                              in parallel, 10 by default
                            maximum: 65535
                            minimum: 1
                            type: integer
                        type: object
                      statefulSet:
                        properties:
                          create:
                            properties:
                              onFailure:
                                description: |
                                  What to do in case created StatefulSet is not in Ready after `statefulSetUpdateTimeout` seconds
                                  Possible options:
                                  1. abort - do nothing, just break the process and wait for admin.
                                  2. delete - delete newly created problematic StatefulSet.
                                  3. ignore (default) - ignore error, pretend nothing happened and move on to the next StatefulSet.
                                type: string
                            type: object
                          update:
                            properties:
                              onFailure:
                                description: |
                                  What to do in case updated StatefulSet is not in Ready after `statefulSetUpdateTimeout` seconds
                                  Possible options:
                                  1. abort - do nothing, just break the process and wait for admin.
                                  2. rollback (default) - delete Pod and rollback StatefulSet to previous Generation. Pod would be recreated by StatefulSet based on rollback-ed configuration.
                                  3. ignore - ignore error, pretend nothing happened and move on to the next StatefulSet.
                                type: string
                              pollInterval:
                                description: How many seconds to wait between checks
                                  for created/updated StatefulSet status
                                type: integer
                              timeout:
                                description: How many seconds to wait for created/updated
                                  StatefulSet to be Ready
                                type: integer
                            type: object
                        type: object
                    type: object
                  statefulSet:
                    properties:
                      revisionHistoryLimit:
                        type: integer
                    type: object
                  template:
                    properties:
                      chi:
                        properties:
                          path:
                            description: Path to folder where ClickHouseInstallationTemplate
                              .yaml manifests are located.
                            type: string
                        type: object
                    type: object
                  watch:
                    properties:
                      namespaces:
                        description: List of namespaces where clickhouse-operator
                          watches for events.
                        items:
                          type: string
                        type: array
                    type: object
                type: object
                x-kubernetes-preserve-unknown-fields: true
              status:
                type: object
                x-kubernetes-preserve-unknown-fields: true
            type: object
            x-kubernetes-preserve-unknown-fields: true
        served: true
        storage: true
